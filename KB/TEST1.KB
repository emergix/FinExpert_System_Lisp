;tests pour les experts en analyses techniques , exemple de courbes a analyser


      
(de tpp1 ()
    (prog (ad)
          (setq as1 ($ 'courbe-2d 'instanciate nil nil))
          (setq ad '#[
                ((87 3 9 0 0 0)   13   ) ;66
                ((87 3 10 0 0 0)  13.5   ) ;67
                ((87 3 11 0 0 0)  14   ) ;68
                ((87 3 12 0 0 0)  14.1   ) ;69
                ((87 3 13 0 0 0)  14   ) ;70
                ((87 3 14 0 0 0)  15   ) ;71
                ((87 3 15 0 0 0)  16   ) ;72
                ((87 3 16 0 0 0)  14.75   ) ;73
                ((87 3 17 0 0 0)  15.8   ) ;74
                ((87 3 18 0 0 0)  15.5   ) ;75
                ((87 3 19 0 0 0)  16   ) ;76
                ((87 3 20 0 0 0)  16   ) ;77
                ((87 3 21 0 0 0)  17   ) ;78
                ((87 3 22 0 0 0)  18.5   ) ;79
                ((87 3 23 0 0 0)  20   ) ;80
                ((87 3 24 0 0 0)  19   ) ;81
                ((87 3 25 0 0 0)  18.5   ) ;82
                ((87 3 26 0 0 0)  17.5   ) ;83
                ((87 3 27 0 0 0)  18   ) ;84
                ((87 3 28 0 0 0)  19   ) ;85
                ((87 3 29 0 0 0)  20   ) ;86
                ((87 3 30 0 0 0)  21   ) ;87
                ((87 3 31 0 0 0)  22   ) ;88
                ((87 4 1 0 0 0)   21.5   ) ;89
                ((87 4 2 0 0 0)   21   ) ;90
                ((87 4 3 0 0 0)   21   ) ;91
                ((87 4 4 0 0 0)   20.5   ) ;92
                ((87 4 5 0 0 0)   19.75   ) ;93
                ((87 4 6 0 0 0)   20   ) ;94
                ((87 4 7 0 0 0)   20.5   ) ;95  
                ((87 4 8 0 0 0)   24   ) ;96
                ((87 4 9 0 0 0)   23   ) ;97
                ((87 4 10 0 0 0)  24.5   ) ;98
                ((87 4 11 0 0 0)  26   ) ;99
                ((87 4 12 0 0 0)  25.5   ) ;100
	 
                ])


          (setf (get-slot-value as1 'xtype) 'date)
          (setf (get-slot-value as1 'ytype) 'real)
          (setf (get-slot-value as1 'body) ad)
          (setf (get-slot-value as1 'pointeur) 0)
          (setf (get-slot-value as1 'pointeur-max) (1- (vlength ad)))
          ))



(de tpp2 ()
    (prog (ad)
          (setq as2 ($ 'courbe-2d 'instanciate nil nil))
          (setq ad '#[((87 1 1 0 0 0)  11   ) ;0
                ((87 1 3 0 0 0)   11.2 ) ;1
                ((87 1 4 0 0 0)   11.5 ) ;2
                ((87 1 5 0 0 0)   11   ) ;3
                ((87 1 6 0 0 0)   12   ) ;4
                ((87 1 7 0 0 0)   11.8   ) ;5
                ((87 1 8 0 0 0)   11.5   ) ;6
                ((87 1 9 0 0 0)   12.5   ) ;7
                ((87 1 10 0 0 0)  12   ) ;8
                ((87 1 11 0 0 0)  13   ) ;9
                ((87 1 12 0 0 0)  13.5   ) ;10
                ((87 1 13 0 0 0)  13   ) ;11
                ((87 1 14 0 0 0)  13.25   ) ;12
                ((87 1 15 0 0 0)  13   ) ;13
                ((87 1 16 0 0 0)  13   ) ;14
                ((87 1 17 0 0 0)  13.5   ) ;15
                ((87 1 18 0 0 0)  13   ) ;16
                ((87 1 19 0 0 0)  13.5   ) ;17
                ((87 1 20 0 0 0)  15   ) ;18
                ((87 1 21 0 0 0)  14.75   ) ;19
                ((87 1 22 0 0 0)  14.5   ) ;20
                ((87 1 23 0 0 0)  15   ) ;21
                ((87 1 24 0 0 0)  14   ) ;22
                ((87 1 25 0 0 0)  14.5   ) ;23
                ((87 1 26 0 0 0)  14   ) ;24
                ((87 1 27 0 0 0)  13.5   ) ;25
                ((87 1 28 0 0 0)  13   ) ;26
                ((87 1 29 0 0 0)  14   ) ;27
                ((87 1 30 0 0 0)  13.5   ) ;28
                ((87 1 31 0 0 0)  15   ) ;29
                ((87 2 1 0 0 0)   14.5   ) ;30
                ((87 2 2 0 0 0)   17   ) ;31
                ((87 2 3 0 0 0)   18   ) ;32
                ((87 2 4 0 0 0)   17.5   ) ;33
                ((87 2 5 0 0 0)   17   ) ;34
                ((87 2 6 0 0 0)   16   ) ;35
                ((87 2 7 0 0 0)   16.5   ) ;36  
                ((87 2 8 0 0 0)   16   ) ;37
                ((87 2 9 0 0 0)   17   ) ;38
                ((87 2 10 0 0 0)  17.1   ) ;39
                ((87 2 11 0 0 0)  17.2   ) ;40
                ((87 2 12 0 0 0)  17.1   ) ;41
                ((87 2 13 0 0 0)  17   ) ;42
                ((87 2 14 0 0 0)  17.5   ) ;43
                ((87 2 15 0 0 0)  18   ) ;44
                ((87 2 16 0 0 0)  17.5   ) ;45
                ((87 2 17 0 0 0)  21   ) ;46
                ((87 2 18 0 0 0)  18   ) ;47
                ((87 2 19 0 0 0)  20.5   ) ;48
                ((87 2 20 0 0 0)  17.5   ) ;49
                ((87 2 21 0 0 0)  18   ) ;50
                ((87 2 22 0 0 0)  18.1   ) ;51
                ((87 2 23 0 0 0)  18   ) ;52
                ((87 2 24 0 0 0)  17   ) ;53
                ((87 2 25 0 0 0)  17   ) ;54
                ((87 2 26 0 0 0)  16   ) ;55
                ((87 2 27 0 0 0)  18.5   ) ;56
                ((87 2 28 0 0 0)  16.5   ) ;57
                ((87 3 1 0 0 0)   15.5   ) ;58
                ((87 3 2 0 0 0)   15.5   ) ;59
                ((87 3 3 0 0 0)   14.5   ) ;60
                ((87 3 4 0 0 0)   15   ) ;61
                ((87 3 5 0 0 0)   14.5   ) ;62
                ((87 3 6 0 0 0)   15.5   ) ;63
                ((87 3 7 0 0 0)   16.5   ) ;64
                ((87 3 8 0 0 0)   14.5   ) ;65
                ((87 3 9 0 0 0)   13   ) ;66
                ((87 3 10 0 0 0)  13.5   ) ;67
                ((87 3 11 0 0 0)  14   ) ;68
                ((87 3 12 0 0 0)  14.1   ) ;69
                ((87 3 13 0 0 0)  14   ) ;70
                ((87 3 14 0 0 0)  15   ) ;71
                ((87 3 15 0 0 0)  16   ) ;72
                ((87 3 16 0 0 0)  14.75   ) ;73
                ((87 3 17 0 0 0)  15.8   ) ;74
                ((87 3 18 0 0 0)  15.5   ) ;75
                ((87 3 19 0 0 0)  16   ) ;76
                ((87 3 20 0 0 0)  16   ) ;77
                ((87 3 21 0 0 0)  17   ) ;78
                ((87 3 22 0 0 0)  18.5   ) ;79
                ((87 3 23 0 0 0)  20   ) ;80
                ((87 3 24 0 0 0)  19   ) ;81
                ((87 3 25 0 0 0)  18.5   ) ;82
                ((87 3 26 0 0 0)  17.5   ) ;83
                ((87 3 27 0 0 0)  18   ) ;84
                ((87 3 28 0 0 0)  19   ) ;85
                ((87 3 29 0 0 0)  20   ) ;86
                ((87 3 30 0 0 0)  21   ) ;87
                ((87 3 31 0 0 0)  22   ) ;88
                ((87 4 1 0 0 0)   21.5   ) ;89
                ((87 4 2 0 0 0)   21   ) ;90
                ((87 4 3 0 0 0)   21   ) ;91
                ((87 4 4 0 0 0)   20.5   ) ;92
                ((87 4 5 0 0 0)   19.75   ) ;93
                ((87 4 6 0 0 0)   20   ) ;94
                ((87 4 7 0 0 0)   20.5   ) ;95  
                ((87 4 8 0 0 0)   24   ) ;96
                ((87 4 9 0 0 0)   23   ) ;97
                ((87 4 10 0 0 0)  24.5   ) ;98
                ((87 4 11 0 0 0)  26   ) ;99
                ((87 4 12 0 0 0)  25.5   ) ;100
	 
                ])


          (setf (get-slot-value as2 'xtype) 'date)
          (setf (get-slot-value as2 'ytype) 'real)
          (setf (get-slot-value as2 'body) ad)
          (setf (get-slot-value as2 'pointeur) 0)
          (setf (get-slot-value as2 'pointeur-max) (1- (vlength ad)))
          ))

(de tpp3 ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-fourier 'what-do-you-think-about as1))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))

(de tpp4 ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-canal 'what-do-you-think-about as1))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))

(de tpp5 ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-eliot 'what-do-you-think-about as1))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))
(de tpp3b ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-fourier 'what-do-you-think-about as2))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))

(de tpp4b ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-canal 'what-do-you-think-about as2))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))

(de tpp5b ()
    (prog (r)
	  (ctf)
	  (tl0)
          (tl '(1 2 3 4 5))
	  (tpp1)
	  (setq r ($ 'expert-eliot 'what-do-you-think-about as2))
	  (print "la conclusion du rapport est " (get-slot-value r 'conclusion))
	  nil))
(de tpp6 ()
    (prog(courbe)
         (setq courbe (car  (mapcan '(lambda (x) (cond ((eq (car (get-slot-value x 'courbe-origine)) as1)
                                                        (list x))
                                                       (t nil)))
                                    (get-slot-value 'courbe-2d 'instances))))
         (funcall 'display-courbe-2d  2 3 (cons courbe
                                                (mapcan '(lambda (x) (cond ((eq (get-slot-value x 'courbe-origine) courbe)
                                                                            (list x))
                                                                           (t nil)))
                                                        (get-slot-value 'droite-technique 'instances))))
         (return nil)))

(de tpp7 ()
    (prog(courbe)
         (setq courbe (car  (mapcan '(lambda (x) (cond ((eq (car (get-slot-value x 'courbe-origine)) as2)
                                                        (list x))
                                                       (t nil)))
                                    (get-slot-value 'courbe-2d 'instances))))
         (funcall 'display-courbe-2d  2 3 (cons courbe
                                                (mapcan '(lambda (x) (cond ((eq (get-slot-value x 'courbe-origine) courbe)
                                                                            (list x))
                                                                           (t nil)))
                                                        (get-slot-value 'droite-technique 'instances))))
         (return nil)))


(de tt ()
    (tpp1)
    (tpp4)
    (tpp6))


(de tt1 ()
    (tpp2)
    (tpp4b)
    (tpp7))