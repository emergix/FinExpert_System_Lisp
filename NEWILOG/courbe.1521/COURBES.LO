(loader '((title |courbes.lo|)))
(put-abbrev 'objet-graph '#:image:rectangle:objet-graph)
(putprop '#:image:rectangle:objet-graph '((() () () () () () () ()) ech-x ech-y h-total min-x min-y max-x max-y symbol) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:make subr0)
(entry #:image:rectangle:objet-graph:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '12 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:ech-x nsubr)
(entry #:image:rectangle:objet-graph:ech-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:ech-x)
(push '4)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:ech-x (struct . valeur) (ifn valeur (list 'vref struct 4) (list 'vset struct 4 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:ech-y nsubr)
(entry #:image:rectangle:objet-graph:ech-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:ech-y)
(push '5)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:ech-y (struct . valeur) (ifn valeur (list 'vref struct 5) (list 'vset struct 5 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:h-total nsubr)
(entry #:image:rectangle:objet-graph:h-total nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:h-total)
(push '6)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:h-total (struct . valeur) (ifn valeur (list 'vref struct 6) (list 'vset struct 6 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:min-x nsubr)
(entry #:image:rectangle:objet-graph:min-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:min-x)
(push '7)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:min-x (struct . valeur) (ifn valeur (list 'vref struct 7) (list 'vset struct 7 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:min-y nsubr)
(entry #:image:rectangle:objet-graph:min-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:min-y)
(push '8)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:min-y (struct . valeur) (ifn valeur (list 'vref struct 8) (list 'vset struct 8 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:max-x nsubr)
(entry #:image:rectangle:objet-graph:max-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:max-x)
(push '9)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:max-x (struct . valeur) (ifn valeur (list 'vref struct 9) (list 'vset struct 9 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:max-y nsubr)
(entry #:image:rectangle:objet-graph:max-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:max-y)
(push '10)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:max-y (struct . valeur) (ifn valeur (list 'vref struct 10) (list 'vset struct 10 (car valeur))))))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:symbol (struct . valeur) (ifn valeur (list 'vref struct 11) (list 'vset struct 11 (car valeur))))))
'#:image:rectangle:objet-graph
(put-abbrev 'courbe '#:image:rectangle:objet-graph:courbe)
(putprop '#:image:rectangle:objet-graph:courbe '((() () () () ()) liste-de-points mon-min-x mon-min-y mon-max-x mon-max-y) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:courbe:make subr0)
(entry #:image:rectangle:objet-graph:courbe:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '17 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:courbe)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:courbe:liste-de-points nsubr)
(entry #:image:rectangle:objet-graph:courbe:liste-de-points nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe:liste-de-points)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:courbe:liste-de-points (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:courbe:mon-min-x nsubr)
(entry #:image:rectangle:objet-graph:courbe:mon-min-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe:mon-min-x)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:courbe:mon-min-x (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:courbe:mon-min-y nsubr)
(entry #:image:rectangle:objet-graph:courbe:mon-min-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe:mon-min-y)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:courbe:mon-min-y (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:courbe:mon-max-x nsubr)
(entry #:image:rectangle:objet-graph:courbe:mon-max-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe:mon-max-x)
(push '15)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:courbe:mon-max-x (struct . valeur) (ifn valeur (list 'vref struct 15) (list 'vset struct 15 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:courbe:mon-max-y nsubr)
(entry #:image:rectangle:objet-graph:courbe:mon-max-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe:mon-max-y)
(push '16)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:courbe:mon-max-y (struct . valeur) (ifn valeur (list 'vref struct 16) (list 'vset struct 16 (car valeur))))))
'#:image:rectangle:objet-graph:courbe
(setq #:sys-package:colon '#:image:rectangle:objet-graph:courbe)
(put-abbrev 'histogramme '#:image:rectangle:objet-graph:histogramme)
(putprop '#:image:rectangle:objet-graph:histogramme '((() () ()) liste-de-points hor? pattern) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:make subr0)
(entry #:image:rectangle:objet-graph:histogramme:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '15 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:histogramme)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:histogramme:liste-de-points nsubr)
(entry #:image:rectangle:objet-graph:histogramme:liste-de-points nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:histogramme:liste-de-points)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:histogramme:liste-de-points (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:histogramme:hor? nsubr)
(entry #:image:rectangle:objet-graph:histogramme:hor? nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:histogramme:hor?)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:histogramme:hor? (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:histogramme:pattern nsubr)
(entry #:image:rectangle:objet-graph:histogramme:pattern nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:histogramme:pattern)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:histogramme:pattern (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
'#:image:rectangle:objet-graph:histogramme
(put-abbrev 'gros-histogramme '#:image:rectangle:objet-graph:histogramme:gros-histogramme)
(putprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme '(()) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:gros-histogramme:make subr0)
(entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '15 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:histogramme:gros-histogramme)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
'#:image:rectangle:objet-graph:histogramme:gros-histogramme
(put-abbrev 'valeur '#:image:rectangle:objet-graph:valeur)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:valeur)
(putprop '#:image:rectangle:objet-graph:valeur '((() () () () () () () () ()) mon-max-x mon-max-y mon-min-x mon-min-y courbe-ouverture courbe-fermeture courbe-plus-h courbe-plus-b courbe-volume) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:valeur:make subr0)
(entry #:image:rectangle:objet-graph:valeur:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '21 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:valeur)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:valeur:mon-max-x nsubr)
(entry #:image:rectangle:objet-graph:valeur:mon-max-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:mon-max-x)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:mon-max-x (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:mon-max-y nsubr)
(entry #:image:rectangle:objet-graph:valeur:mon-max-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:mon-max-y)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:mon-max-y (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:mon-min-x nsubr)
(entry #:image:rectangle:objet-graph:valeur:mon-min-x nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:mon-min-x)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:mon-min-x (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:mon-min-y nsubr)
(entry #:image:rectangle:objet-graph:valeur:mon-min-y nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:mon-min-y)
(push '15)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:mon-min-y (struct . valeur) (ifn valeur (list 'vref struct 15) (list 'vset struct 15 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:courbe-ouverture nsubr)
(entry #:image:rectangle:objet-graph:valeur:courbe-ouverture nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:courbe-ouverture)
(push '16)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:courbe-ouverture (struct . valeur) (ifn valeur (list 'vref struct 16) (list 'vset struct 16 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:courbe-fermeture nsubr)
(entry #:image:rectangle:objet-graph:valeur:courbe-fermeture nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:courbe-fermeture)
(push '17)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:courbe-fermeture (struct . valeur) (ifn valeur (list 'vref struct 17) (list 'vset struct 17 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:courbe-plus-h nsubr)
(entry #:image:rectangle:objet-graph:valeur:courbe-plus-h nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:courbe-plus-h)
(push '18)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:courbe-plus-h (struct . valeur) (ifn valeur (list 'vref struct 18) (list 'vset struct 18 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:courbe-plus-b nsubr)
(entry #:image:rectangle:objet-graph:valeur:courbe-plus-b nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:courbe-plus-b)
(push '19)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:courbe-plus-b (struct . valeur) (ifn valeur (list 'vref struct 19) (list 'vset struct 19 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:valeur:courbe-volume nsubr)
(entry #:image:rectangle:objet-graph:valeur:courbe-volume nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur:courbe-volume)
(push '20)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:valeur:courbe-volume (struct . valeur) (ifn valeur (list 'vref struct 20) (list 'vset struct 20 (car valeur))))))
'#:image:rectangle:objet-graph:valeur
(defvar #:image:rectangle:objet-graph:valeur:decal-length 3)
(put-abbrev 'segment '#:image:rectangle:objet-graph:segment)
(putprop '#:image:rectangle:objet-graph:segment '((() () ()) point-depart point-arrivee epaisseur) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:segment:make subr0)
(entry #:image:rectangle:objet-graph:segment:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '15 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:segment)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:segment:point-depart nsubr)
(entry #:image:rectangle:objet-graph:segment:point-depart nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:segment:point-depart)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:segment:point-depart (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:segment:point-arrivee nsubr)
(entry #:image:rectangle:objet-graph:segment:point-arrivee nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:segment:point-arrivee)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:segment:point-arrivee (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:segment:epaisseur nsubr)
(entry #:image:rectangle:objet-graph:segment:epaisseur nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:segment:epaisseur)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:segment:epaisseur (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
'#:image:rectangle:objet-graph:segment
(put-abbrev 'droite-technique '#:image:rectangle:objet-graph:droite-technique)
(putprop '#:image:rectangle:objet-graph:droite-technique '((() () ()) pente ordonnee-0 epaisseur) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:make subr0)
(entry #:image:rectangle:objet-graph:droite-technique:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '15 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:droite-technique)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:pente nsubr)
(entry #:image:rectangle:objet-graph:droite-technique:pente nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:droite-technique:pente)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:droite-technique:pente (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:ordonnee-0 nsubr)
(entry #:image:rectangle:objet-graph:droite-technique:ordonnee-0 nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:droite-technique:ordonnee-0)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:droite-technique:ordonnee-0 (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:epaisseur nsubr)
(entry #:image:rectangle:objet-graph:droite-technique:epaisseur nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:droite-technique:epaisseur)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:droite-technique:epaisseur (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
'#:image:rectangle:objet-graph:droite-technique
(put-abbrev 'figure '#:image:rectangle:objet-graph:figure)
(putprop '#:image:rectangle:objet-graph:figure '((() ()) droite-resistance droite-support) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:figure:make subr0)
(entry #:image:rectangle:objet-graph:figure:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '14 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:figure)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:figure:droite-resistance (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:figure:droite-support (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
'#:image:rectangle:objet-graph:figure
(put-abbrev 'canal '#:image:rectangle:objet-graph:figure:canal)
(putprop '#:image:rectangle:objet-graph:figure:canal '(()) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:figure:canal:make subr0)
(entry #:image:rectangle:objet-graph:figure:canal:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '14 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:figure:canal)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
'#:image:rectangle:objet-graph:figure:canal
(put-abbrev 'ctriangle '#:image:rectangle:objet-graph:figure:ctriangle)
(putprop '#:image:rectangle:objet-graph:figure:ctriangle '(()) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:figure:ctriangle:make subr0)
(entry #:image:rectangle:objet-graph:figure:ctriangle:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '14 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:figure:ctriangle)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
'#:image:rectangle:objet-graph:figure:ctriangle
(put-abbrev 'fleche '#:image:rectangle:objet-graph:fleche)
(putprop '#:image:rectangle:objet-graph:fleche '((() () () () ()) point-arrivee type longueur rang courbe) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:fleche:make subr0)
(entry #:image:rectangle:objet-graph:fleche:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '17 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:fleche)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:fleche:point-arrivee nsubr)
(entry #:image:rectangle:objet-graph:fleche:point-arrivee nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:point-arrivee)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:point-arrivee (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:type nsubr)
(entry #:image:rectangle:objet-graph:fleche:type nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:type)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:type (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:longueur nsubr)
(entry #:image:rectangle:objet-graph:fleche:longueur nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:longueur)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:longueur (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:rang nsubr)
(entry #:image:rectangle:objet-graph:fleche:rang nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:rang)
(push '15)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:rang (struct . valeur) (ifn valeur (list 'vref struct 15) (list 'vset struct 15 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:courbe nsubr)
(entry #:image:rectangle:objet-graph:fleche:courbe nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:courbe)
(push '16)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:courbe (struct . valeur) (ifn valeur (list 'vref struct 16) (list 'vset struct 16 (car valeur))))))
'#:image:rectangle:objet-graph:fleche
(setq #:sys-package:colon '#:image:rectangle:objet-graph:fleche)
(defvar #:image:rectangle:objet-graph:fleche:pi/4 .785398)
(put-abbrev 'texte-sur-fleche '#:image:rectangle:objet-graph:fleche:texte-sur-fleche)
(putprop '#:image:rectangle:objet-graph:fleche:texte-sur-fleche '((() () () () ()) petite-long texte police boite? situation) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:make subr0)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '22 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:petite-long nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:petite-long nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:petite-long)
(push '17)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:texte-sur-fleche:petite-long (struct . valeur) (ifn valeur (list 'vref struct 17) (list 'vset struct 17 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:texte nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:texte nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:texte)
(push '18)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:texte-sur-fleche:texte (struct . valeur) (ifn valeur (list 'vref struct 18) (list 'vset struct 18 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:police nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:police nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:police)
(push '19)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:texte-sur-fleche:police (struct . valeur) (ifn valeur (list 'vref struct 19) (list 'vset struct 19 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:boite? nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:boite? nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:boite?)
(push '20)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:texte-sur-fleche:boite? (struct . valeur) (ifn valeur (list 'vref struct 20) (list 'vset struct 20 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:situation nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:situation nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:situation)
(push '21)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:fleche:texte-sur-fleche:situation (struct . valeur) (ifn valeur (list 'vref struct 21) (list 'vset struct 21 (car valeur))))))
'#:image:rectangle:objet-graph:fleche:texte-sur-fleche
(put-abbrev 'indicateur-volume '#:image:rectangle:objet-graph:indicateur-volume)
(putprop '#:image:rectangle:objet-graph:indicateur-volume '((() ()) liste-de-points point-max) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-volume:make subr0)
(entry #:image:rectangle:objet-graph:indicateur-volume:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '14 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:indicateur-volume)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-volume:liste-de-points nsubr)
(entry #:image:rectangle:objet-graph:indicateur-volume:liste-de-points nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-volume:liste-de-points)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-volume:liste-de-points (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-volume:point-max nsubr)
(entry #:image:rectangle:objet-graph:indicateur-volume:point-max nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-volume:point-max)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-volume:point-max (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
'#:image:rectangle:objet-graph:indicateur-volume
(setq #:sys-package:colon '#:image:rectangle:objet-graph:indicateur-volume)
(defvar #:image:rectangle:objet-graph:indicateur-volume:length 6)
(put-abbrev 'indicateur-etendu '#:image:rectangle:objet-graph:indicateur-etendu)
(putprop '#:image:rectangle:objet-graph:indicateur-etendu '((() () () () () () () ()) point-debut rang-debut point-fin rang-fin courbe titre police boite?) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:make subr0)
(entry #:image:rectangle:objet-graph:indicateur-etendu:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '20 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:indicateur-etendu)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:point-debut nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:point-debut nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:point-debut)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:point-debut (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:rang-debut nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:rang-debut nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:rang-debut)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:rang-debut (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:point-fin nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:point-fin nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:point-fin)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:point-fin (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:rang-fin nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:rang-fin nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:rang-fin)
(push '15)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:rang-fin (struct . valeur) (ifn valeur (list 'vref struct 15) (list 'vset struct 15 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:courbe nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:courbe nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:courbe)
(push '16)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:courbe (struct . valeur) (ifn valeur (list 'vref struct 16) (list 'vset struct 16 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:titre nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:titre nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:titre)
(push '17)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:titre (struct . valeur) (ifn valeur (list 'vref struct 17) (list 'vset struct 17 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:police nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:police nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:police)
(push '18)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:police (struct . valeur) (ifn valeur (list 'vref struct 18) (list 'vset struct 18 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:boite? nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:boite? nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu:boite?)
(push '19)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:indicateur-etendu:boite? (struct . valeur) (ifn valeur (list 'vref struct 19) (list 'vset struct 19 (car valeur))))))
'#:image:rectangle:objet-graph:indicateur-etendu
(put-abbrev 'points-et-figures '#:image:rectangle:objet-graph:points-et-figures)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:points-et-figures)
(putprop '#:image:rectangle:objet-graph:points-et-figures '((() () ()) largeur-colonne boite body) 'defstruct)
(loader'((fentry #:image:rectangle:objet-graph:points-et-figures:make subr0)
(entry #:image:rectangle:objet-graph:points-et-figures:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '15 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 102))
(push a1)
(push '#:image:rectangle:objet-graph:points-et-figures)
(mov '2 a4)
(jmp typevector)
102
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:points-et-figures:largeur-colonne (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:points-et-figures:boite (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:image:rectangle:objet-graph:points-et-figures:body nsubr)
(entry #:image:rectangle:objet-graph:points-et-figures:body nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:objet-graph:points-et-figures:body)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:objet-graph:points-et-figures:body (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
'#:image:rectangle:objet-graph:points-et-figures
(defvar #:image:rectangle:objet-graph:points-et-figures:chiffres-et-autres '("1" "2" "3" "4" "5" "6" "7" "8" "9" "0" "x" "o"))
(setq #:sys-package:colon '#:image:rectangle:objet-graph)
(loader'((fentry #:image:rectangle:objet-graph:create subr0)
(entry #:image:rectangle:objet-graph:create subr0)
(mov '#:image:rectangle:objet-graph a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:initialize nsubr)
(entry #:image:rectangle:objet-graph:initialize nsubr)
(cnbeq a4 '8 0)
(mov '#:image:rectangle:objet-graph:initialize a1)
(mov '8 a2)
(jmp #:llcp:errwna)
0
(hpmovx '0 (& 7) '0)
(hpmovx '0 (& 7) '1)
(hpmovx '0 (& 7) '2)
(hpmovx '0 (& 7) '3)
(push (@ 101))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(mov '8 a4)
(jmp #:image:rectangle:objet-graph:reinitialize)
101
(eval ())
(adjstk '8)
(return)
))
(remprop '#:image:rectangle:objet-graph:initialize '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:reinitialize nsubr)
(entry #:image:rectangle:objet-graph:reinitialize nsubr)
(cnbeq a4 '8 0)
(mov '#:image:rectangle:objet-graph:reinitialize a1)
(mov '8 a2)
(jmp #:llcp:errwna)
0
(btnil (& 6) 102)
(hpmovx (& 6) (& 7) '4)
102
(btnil (& 5) 104)
(hpmovx (& 5) (& 7) '5)
104
(btnil (& 4) 106)
(hpmovx (& 4) (& 7) '6)
106
(btnil (& 3) 108)
(hpmovx (& 3) (& 7) '7)
108
(btnil (& 2) 110)
(hpmovx (& 2) (& 7) '8)
110
(btnil (& 1) 112)
(hpmovx (& 1) (& 7) '9)
112
(btnil (& 0) 114)
(hpmovx (& 0) (& 7) '10)
114
(mov (& 7) a1)
(adjstk '8)
(return)
))
(remprop '#:image:rectangle:objet-graph:reinitialize '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:calcul-de-x subr2)
(entry #:image:rectangle:objet-graph:calcul-de-x subr2)
(push (@ 101))
(hpxmov a1 '4 a4)
(push a4)
(push (@ 102))
(push a2)
(hpxmov a1 '7 a4)
(push a4)
(mov '2 a4)
(jmp -)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
101
(eval ())
(jmp fix)
))
(remprop '#:image:rectangle:objet-graph:calcul-de-x '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:calcul-de-y subr2)
(entry #:image:rectangle:objet-graph:calcul-de-y subr2)
(push a1)
(hpxmov a1 '6 a1)
(push a1)
(push (@ 101))
(hpxmov (& 2) '5 a4)
(push a4)
(push (@ 102))
(push a2)
(hpxmov (& 5) '8 a4)
(push a4)
(mov '2 a4)
(jmp -)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
101
(eval ())
(jcall fix)
(pop a4)
(diff a1 a4)
(mov a4 a1)
(adjstk '1)
(return)
))
(remprop '#:image:rectangle:objet-graph:calcul-de-y '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:show subr1)
(entry #:image:rectangle:objet-graph:show subr1)
(mov nil a1)
(return)
))
(remprop '#:image:rectangle:objet-graph:show '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:hide subr1)
(entry #:image:rectangle:objet-graph:hide subr1)
(mov nil a1)
(return)
))
(remprop '#:image:rectangle:objet-graph:hide '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:courbe)
(loader'((entry #:image:rectangle:objet-graph:courbe:create subr0)
(mov '#:image:rectangle:objet-graph:courbe a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:courbe:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:courbe:initialize subr2)
(entry #:image:rectangle:objet-graph:courbe:initialize subr2)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:courbe)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(mov (& 1) a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(mov (& 1) a1)
(jcall min-x)
(hpmovx a1 (& 0) '13)
(mov (& 1) a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(mov (& 1) a1)
(jcall min-y)
(hpmovx a1 (& 0) '14)
(mov (& 1) a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(mov (& 1) a1)
(jcall max-x)
(hpmovx a1 (& 0) '15)
(mov (& 1) a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(mov (& 1) a1)
(jcall max-y)
(hpmovx a1 (& 0) '16)
(mov (& 0) a1)
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:courbe:initialize '#:system:loaded-from-file)
(loader'((fentry courbe subr1)
(entry courbe subr1)
(push a1)
(call #:image:rectangle:objet-graph:courbe:create)
(mov (& 0) a2)
(adjstk '1)
(jmp #:image:rectangle:objet-graph:courbe:initialize)
))
(remprop 'courbe '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:courbe:width subr1)
(entry #:image:rectangle:objet-graph:courbe:width subr1)
(push a1)
(push (@ 101))
(push (@ 102))
(push 'ech-x)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(hpxmov (& 2) '15 a4)
(hpxmov (& 2) '13 a3)
(diff a3 a4)
(push a4)
(mov '2 a4)
(jmp *)
101
(eval ())
(adjstk '1)
(jmp fix)
))
(remprop '#:image:rectangle:objet-graph:courbe:width '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:courbe:height subr1)
(entry #:image:rectangle:objet-graph:courbe:height subr1)
(push a1)
(push (@ 101))
(push (@ 102))
(push 'ech-y)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(hpxmov (& 2) '16 a4)
(hpxmov (& 2) '14 a3)
(diff a3 a4)
(push a4)
(mov '2 a4)
(jmp *)
101
(eval ())
(adjstk '1)
(jmp fix)
))
(remprop '#:image:rectangle:objet-graph:courbe:height '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:courbe:display nsubr)
(entry #:image:rectangle:objet-graph:courbe:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:courbe:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(hpxmov (& 3) '12 a4)
(push a4)
(mov a4 a1)
(jcall get-length)
(push a1)
(push '0)
(push nil)
(push (@ 101))
(push 'x)
(push (& 9))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(mov a4 (& 6))
(push (@ 102))
(push 'y)
(push (& 9))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 5) a4)
(plus a1 a4)
(mov a4 (& 5))
(cabeq '0 (& 2) 103)
(hpxmov (& 3) (& 1) a3)
(mov a3 (& 0))
105
(mov (& 2) a4)
(diff '2 a4)
(cabeq (& 1) a4 106)
(push (@ 107))
(push (@ 108))
(push 'calcul-de-x)
(push (& 10))
(mov (& 4) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
108
(eval ())
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 109))
(push 'calcul-de-y)
(push (& 11))
(mov (& 5) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 110))
(push 'calcul-de-x)
(push (& 12))
(mov (& 7) a4)
(plus '1 a4)
(hpxmov (& 9) a4 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
110
(eval ())
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(push (@ 111))
(push 'calcul-de-y)
(push (& 13))
(mov (& 8) a4)
(plus '1 a4)
(hpxmov (& 10) a4 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
111
(eval ())
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
107
(eval ())
(mov (& 1) a1)
(jcall 1+)
(mov a1 (& 1))
(hpxmov (& 3) a1 a4)
(mov a4 (& 0))
(bra 105)
106
(mov nil a1)
(adjstk '8)
(return)
103
(mov nil a1)
(adjstk '8)
(return)
))
(remprop '#:image:rectangle:objet-graph:courbe:display '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:histogramme)
(loader'((entry #:image:rectangle:objet-graph:histogramme:create subr0)
(mov '#:image:rectangle:objet-graph:histogramme a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:histogramme:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:initialize subr3)
(entry #:image:rectangle:objet-graph:histogramme:initialize subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:histogramme)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(hpmovx (& 2) (& 0) '14)
(mov (& 0) a1)
(adjstk '3)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:initialize '#:system:loaded-from-file)
(loader'((fentry h-histogramme subr1)
(entry h-histogramme subr1)
(push a1)
(call #:image:rectangle:objet-graph:histogramme:create)
(mov '1 a3)
(mov (& 0) a2)
(jcall #:image:rectangle:objet-graph:histogramme:initialize)
(hpmovx 't a1 '13)
(adjstk '1)
(return)
))
(remprop 'h-histogramme '#:system:loaded-from-file)
(loader'((fentry v-histogramme subr1)
(entry v-histogramme subr1)
(push a1)
(call #:image:rectangle:objet-graph:histogramme:create)
(mov '1 a3)
(mov (& 0) a2)
(jcall #:image:rectangle:objet-graph:histogramme:initialize)
(hpmovx nil a1 '13)
(adjstk '1)
(return)
))
(remprop 'v-histogramme '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:display nsubr)
(entry #:image:rectangle:objet-graph:histogramme:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:histogramme:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(hpxmov (& 3) '12 a4)
(push a4)
(mov a4 a1)
(jcall get-length)
(push a1)
(push '0)
(hpxmov (& 6) '13 a4)
(btnil a4 106)
103
(mov (& 1) a4)
(diff '1 a4)
(cnbgt (& 0) a4 104)
(push (@ 105))
(push (& 7))
(push (& 7))
(push (& 7))
(hpxmov (& 6) (& 4) a4)
(push a4)
(mov '4 a4)
(bra #:image:rectangle:objet-graph:histogramme:display-fine-h-bar)
105
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 103)
104
(mov nil a1)
(adjstk '7)
(return)
106
(mov (& 1) a4)
(diff '1 a4)
(cnbgt (& 0) a4 107)
(push (@ 108))
(push (& 7))
(push (& 7))
(push (& 7))
(hpxmov (& 6) (& 4) a4)
(push a4)
(mov '4 a4)
(bra #:image:rectangle:objet-graph:histogramme:display-fine-v-bar)
108
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 106)
107
(mov nil a1)
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:display '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:histogramme:display-fine-h-bar nsubr)
(push (@ 101))
(push 'x)
(push (& 5))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(mov a4 (& 2))
(push (@ 102))
(push 'y)
(push (& 5))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 1) a4)
(plus a1 a4)
(mov a4 (& 1))
(hpxmov (cvalq #:graph-env:current-graph-env) '2 a3)
(push a3)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(hpxmov (& 7) '14 a1)
(jcall current-pattern1)
(push (@ 105))
(push (@ 106))
(push 'calcul-de-x)
(push (& 10))
(mov (& 8) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
106
(eval ())
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 107))
(push 'calcul-de-y)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
107
(eval ())
(plus '1 a1)
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 108))
(push 'calcul-de-x)
(push (& 12))
(push '0)
(mov '3 a4)
(jmp send)
108
(eval ())
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(push (@ 109))
(push 'calcul-de-y)
(push (& 13))
(mov (& 11) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
109
(eval ())
(diff '1 a1)
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(bra remplir-rectangle)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-pattern1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '5)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:display-fine-h-bar '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:histogramme:display-fine-v-bar nsubr)
(push (@ 101))
(push 'x)
(push (& 5))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(mov a4 (& 2))
(push (@ 102))
(push 'y)
(push (& 5))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 1) a4)
(plus a1 a4)
(mov a4 (& 1))
(hpxmov (cvalq #:graph-env:current-graph-env) '2 a3)
(push a3)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(hpxmov (& 7) '14 a1)
(jcall current-pattern1)
(push (@ 105))
(push (@ 106))
(push 'calcul-de-x)
(push (& 10))
(mov (& 8) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
106
(eval ())
(plus '1 a1)
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 107))
(push 'calcul-de-y)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
107
(eval ())
(mov (& 7) a4)
(plus a1 a4)
(push a4)
(push (@ 108))
(push 'calcul-de-x)
(push (& 12))
(mov (& 10) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
108
(eval ())
(diff '1 a1)
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(push (@ 109))
(push 'calcul-de-y)
(push (& 13))
(push '0)
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 9) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(bra remplir-rectangle)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-pattern1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '5)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:display-fine-v-bar '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:histogramme:gros-histogramme)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:gros-histogramme:create subr0)
(entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:create subr0)
(mov '#:image:rectangle:objet-graph:histogramme:gros-histogramme a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:gros-histogramme:initialize subr3)
(entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:initialize subr3)
(push (@ 101))
(push '#:image:rectangle:objet-graph:histogramme:gros-histogramme)
(push 'initialize)
(push a1)
(push a2)
(push a3)
(mov '5 a4)
(jmp send-super)
101
(eval ())
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme:initialize '#:system:loaded-from-file)
(loader'((fentry gros-h-histogramme subr1)
(entry gros-h-histogramme subr1)
(push a1)
(jcall #:image:rectangle:objet-graph:histogramme:gros-histogramme:create)
(mov '1 a3)
(mov (& 0) a2)
(jcall #:image:rectangle:objet-graph:histogramme:gros-histogramme:initialize)
(push a1)
(push (@ 101))
(push 'hor?)
(push a1)
(push 't)
(mov '3 a4)
(jmp send)
101
(eval ())
(mov (& 0) a1)
(adjstk '2)
(return)
))
(remprop 'gros-h-histogramme '#:system:loaded-from-file)
(loader'((fentry gros-v-histogramme subr1)
(entry gros-v-histogramme subr1)
(push a1)
(jcall #:image:rectangle:objet-graph:histogramme:gros-histogramme:create)
(mov '1 a3)
(mov (& 0) a2)
(jcall #:image:rectangle:objet-graph:histogramme:gros-histogramme:initialize)
(push a1)
(push (@ 101))
(push 'hor?)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
101
(eval ())
(mov (& 0) a1)
(adjstk '2)
(return)
))
(remprop 'gros-v-histogramme '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:histogramme:gros-histogramme:display nsubr)
(entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:histogramme:gros-histogramme:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'liste-de-points)
(push (& 5))
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(jcall get-length)
(push a1)
(push nil)
(push nil)
(push '0)
(push (@ 104))
(push 'hor?)
(push (& 10))
(mov '2 a4)
(jmp send)
104
(eval ())
(btnil a1 112)
105
(mov (& 3) a4)
(diff '1 a4)
(cnbgt (& 0) a4 106)
(mov (& 3) a4)
(diff '1 a4)
(cabne (& 0) a4 107)
(hpxmov (& 4) (& 0) a4)
(mov a4 (& 2))
(bra 108)
107
(mov (& 0) a4)
(plus '1 a4)
(hpxmov (& 4) a4 a4)
(mov a4 (& 2))
108
(cabne (& 0) '0 109)
(hpxmov (& 4) (& 0) a3)
(mov a3 (& 1))
(bra 110)
109
(mov (& 0) a3)
(diff '1 a3)
(hpxmov (& 4) a3 a3)
(mov a3 (& 1))
110
(push (@ 111))
(push (& 9))
(push (& 9))
(push (& 9))
(push a3)
(hpxmov (& 9) (& 5) a2)
(push a2)
(push a4)
(mov '6 a4)
(bra #:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-h-bar)
111
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 105)
106
(mov nil a1)
(adjstk '9)
(return)
112
(mov (& 3) a4)
(diff '1 a4)
(cnbgt (& 0) a4 113)
(mov (& 3) a4)
(diff '1 a4)
(cabne (& 0) a4 114)
(hpxmov (& 4) (& 0) a4)
(mov a4 (& 2))
(bra 115)
114
(mov (& 0) a4)
(plus '1 a4)
(hpxmov (& 4) a4 a4)
(mov a4 (& 2))
115
(cabne (& 0) '0 116)
(hpxmov (& 4) (& 0) a3)
(mov a3 (& 1))
(bra 117)
116
(mov (& 0) a3)
(diff '1 a3)
(hpxmov (& 4) a3 a3)
(mov a3 (& 1))
117
(push (@ 118))
(push (& 9))
(push (& 9))
(push (& 9))
(push a3)
(hpxmov (& 9) (& 5) a2)
(push a2)
(push a4)
(mov '6 a4)
(bra #:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-v-bar)
118
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 112)
113
(mov nil a1)
(adjstk '9)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme:display '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-h-bar nsubr)
(push (@ 101))
(push 'x)
(push (& 7))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(mov a4 (& 4))
(push (@ 102))
(push 'y)
(push (& 7))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 3) a4)
(plus a1 a4)
(mov a4 (& 3))
(hpxmov (cvalq #:graph-env:current-graph-env) '2 a3)
(push a3)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push 'pattern)
(push (& 11))
(mov '2 a4)
(jmp send)
105
(eval ())
(jcall current-pattern1)
(push (@ 106))
(push 'calcul-de-y)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 107))
(push 'calcul-de-x)
(push (& 12))
(mov (& 9) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
107
(eval ())
(push a1)
(push (@ 108))
(push 'calcul-de-y)
(push (& 13))
(mov (& 10) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
108
(eval ())
(push a1)
(push (@ 109))
(push 'calcul-de-y)
(push (& 14))
(mov (& 10) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 0) a4)
(diff a1 a4)
(mov a4 a1)
(jcall abs)
(push a1)
(mov (& 1) a4)
(diff (& 3) a4)
(mov a4 a1)
(jcall abs)
(push a1)
(push (@ 110))
(mov (& 14) a4)
(plus (& 4) a4)
(push a4)
(mov (& 3) a4)
(quo '2 a4)
(mov (& 4) a3)
(diff a4 a3)
(mov (& 14) a4)
(plus a3 a4)
(push a4)
(push (@ 111))
(push 'calcul-de-x)
(push (& 19))
(push '0)
(mov '3 a4)
(jmp send)
111
(eval ())
(mov (& 16) a4)
(plus a1 a4)
(push a4)
(mov (& 4) a4)
(quo '2 a4)
(mov (& 6) a3)
(plus a4 a3)
(mov (& 16) a4)
(plus a3 a4)
(push a4)
(mov '4 a4)
(bra remplir-rectangle)
110
(eval ())
(adjstk '5)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-pattern1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-h-bar '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-v-bar nsubr)
(push (@ 101))
(push 'x)
(push (& 7))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(mov a4 (& 4))
(push (@ 102))
(push 'y)
(push (& 7))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 3) a4)
(plus a1 a4)
(mov a4 (& 3))
(hpxmov (cvalq #:graph-env:current-graph-env) '2 a3)
(push a3)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push 'pattern)
(push (& 11))
(mov '2 a4)
(jmp send)
105
(eval ())
(jcall current-pattern1)
(push (@ 106))
(push 'calcul-de-x)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 107))
(push 'calcul-de-x)
(push (& 12))
(mov (& 9) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
107
(eval ())
(push a1)
(push (@ 108))
(push 'calcul-de-y)
(push (& 13))
(mov (& 10) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
108
(eval ())
(push a1)
(push (@ 109))
(push 'calcul-de-x)
(push (& 14))
(mov (& 10) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 1) a4)
(diff a1 a4)
(mov a4 a1)
(jcall abs)
(push a1)
(mov (& 2) a4)
(diff (& 3) a4)
(mov a4 a1)
(jcall abs)
(push (@ 110))
(mov (& 1) a4)
(quo '2 a4)
(mov (& 3) a3)
(plus a4 a3)
(mov (& 13) a4)
(plus a3 a4)
(push a4)
(mov (& 13) a4)
(plus (& 3) a4)
(push a4)
(quo '2 a1)
(mov (& 5) a4)
(diff a1 a4)
(mov (& 15) a3)
(plus a4 a3)
(push a3)
(push (@ 111))
(push 'calcul-de-y)
(push (& 19))
(push '0)
(mov '3 a4)
(jmp send)
111
(eval ())
(mov (& 15) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(bra remplir-rectangle)
110
(eval ())
(adjstk '4)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-pattern1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:histogramme:gros-histogramme:display-grosse-v-bar '#:system:loaded-from-file)
(loader'((entry remplir-rectangle nsubr)
(push (@ 101))
(push (@ 102))
(push (& 5))
(push (& 4))
(mov '2 a4)
(jmp min)
102
(eval ())
(push a1)
(push (@ 103))
(push (& 5))
(push (& 4))
(mov '2 a4)
(jmp min)
103
(eval ())
(push a1)
(mov (& 6) a4)
(diff (& 4) a4)
(mov a4 a1)
(jcall abs)
(push a1)
(mov (& 6) a4)
(diff (& 4) a4)
(mov a4 a1)
(jcall abs)
(push a1)
(mov '4 a4)
(jmp fill-rectangle)
101
(eval ())
(adjstk '4)
(return)
))
(remprop 'remplir-rectangle '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:valeur)
(loader'((entry #:image:rectangle:objet-graph:valeur:create subr0)
(mov '#:image:rectangle:objet-graph:valeur a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:valeur:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:valeur:initialize nsubr)
(entry #:image:rectangle:objet-graph:valeur:initialize nsubr)
(cnbeq a4 '6 0)
(mov '#:image:rectangle:objet-graph:valeur:initialize a1)
(mov '6 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '#:image:rectangle:objet-graph:valeur)
(push 'initialize)
(push (& 8))
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 2) (& 5) '16)
(hpmovx (& 1) (& 5) '17)
(hpmovx (& 4) (& 5) '18)
(hpmovx (& 3) (& 5) '19)
(hpmovx (& 0) (& 5) '20)
(hpxmov (& 5) '16 a1)
(push a1)
(hpxmov (& 6) '16 a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(pop a1)
(jcall min-x)
(hpmovx a1 (& 5) '14)
(hpxmov (& 5) '19 a1)
(push a1)
(hpxmov (& 6) '16 a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(pop a1)
(jcall min-y)
(hpmovx a1 (& 5) '15)
(hpxmov (& 5) '16 a1)
(push a1)
(hpxmov (& 6) '16 a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(pop a1)
(jcall max-x)
(hpmovx a1 (& 5) '12)
(hpxmov (& 5) '18 a1)
(push a1)
(hpxmov (& 6) '16 a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(pop a1)
(jcall max-y)
(hpmovx a1 (& 5) '13)
(mov (& 5) a1)
(adjstk '6)
(return)
))
(remprop '#:image:rectangle:objet-graph:valeur:initialize '#:system:loaded-from-file)
(loader'((fentry valeur nsubr)
(entry valeur nsubr)
(cnbeq a4 '5 0)
(mov 'valeur a1)
(mov '5 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(call #:image:rectangle:objet-graph:valeur:create)
(push a1)
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp #:image:rectangle:objet-graph:valeur:initialize)
101
(eval ())
(adjstk '5)
(return)
))
(remprop 'valeur '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:valeur:display nsubr)
(entry #:image:rectangle:objet-graph:valeur:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:valeur:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(hpxmov (& 3) '18 a1)
(jcall get-length)
(push a1)
(push '0)
(push (@ 101))
(push 'x)
(push (& 7))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(mov a4 (& 4))
(push (@ 102))
(push 'y)
(push (& 7))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 3) a4)
(plus a1 a4)
(mov a4 (& 3))
103
(mov (& 1) a4)
(diff '1 a4)
(cnbgt (& 0) a4 104)
(push (@ 105))
(push (& 6))
(push (& 6))
(push (& 6))
(hpxmov (& 9) '18 a4)
(hpxmov a4 (& 4) a4)
(push a4)
(hpxmov (& 10) '19 a4)
(hpxmov a4 (& 5) a4)
(push a4)
(hpxmov (& 11) '16 a4)
(hpxmov a4 (& 6) a4)
(push a4)
(hpxmov (& 12) '17 a4)
(hpxmov a4 (& 7) a4)
(push a4)
(mov '7 a4)
(bra #:image:rectangle:objet-graph:valeur:display-une-valeur)
105
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 103)
104
(mov nil a1)
(adjstk '6)
(return)
))
(remprop '#:image:rectangle:objet-graph:valeur:display '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:valeur:display-une-valeur nsubr)
(push (@ 101))
(push (@ 102))
(push 'calcul-de-x)
(push (& 9))
(mov (& 7) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
102
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 103))
(push 'calcul-de-y)
(push (& 10))
(mov (& 8) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
103
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 104))
(push 'calcul-de-x)
(push (& 11))
(mov (& 8) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
104
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(push a4)
(push (@ 105))
(push 'calcul-de-y)
(push (& 12))
(mov (& 9) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
105
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
101
(eval ())
(push (@ 106))
(push (@ 107))
(push 'calcul-de-x)
(push (& 9))
(mov (& 7) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
107
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 108))
(push 'calcul-de-y)
(push (& 10))
(mov (& 6) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
108
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 109))
(push 'calcul-de-x)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(diff '1 a4)
(push a4)
(push (@ 110))
(push 'calcul-de-y)
(push (& 12))
(mov (& 8) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
110
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
106
(eval ())
(push (@ 111))
(push (@ 112))
(push 'calcul-de-x)
(push (& 9))
(mov (& 7) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
112
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 113))
(push 'calcul-de-y)
(push (& 10))
(mov (& 5) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
113
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 114))
(push 'calcul-de-x)
(push (& 11))
(mov (& 9) a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
114
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(plus '1 a4)
(push a4)
(push (@ 115))
(push 'calcul-de-y)
(push (& 12))
(mov (& 7) a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
115
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
111
(eval ())
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:valeur:display-une-valeur '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:segment)
(loader'((entry #:image:rectangle:objet-graph:segment:create subr0)
(mov '#:image:rectangle:objet-graph:segment a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:segment:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:segment:initialize subr3)
(entry #:image:rectangle:objet-graph:segment:initialize subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:segment)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(hpmovx (& 2) (& 0) '13)
(hpmovx '1 (& 0) '14)
(mov (& 0) a1)
(adjstk '3)
(return)
))
(remprop '#:image:rectangle:objet-graph:segment:initialize '#:system:loaded-from-file)
(loader'((fentry segment subr2)
(entry segment subr2)
(push a2)
(push a1)
(call #:image:rectangle:objet-graph:segment:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:segment:initialize)
))
(remprop 'segment '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:segment:display nsubr)
(entry #:image:rectangle:objet-graph:segment:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:segment:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'x)
(push (& 5))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(mov a4 (& 2))
(push (@ 102))
(push 'y)
(push (& 5))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 1) a4)
(plus a1 a4)
(mov a4 (& 1))
(push (@ 103))
(push 'calcul-de-x)
(push (& 5))
(hpxmov (& 6) '12 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
103
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(push a4)
(push (@ 104))
(push 'calcul-de-y)
(push (& 6))
(hpxmov (& 7) '12 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
104
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(push a4)
(push (@ 105))
(push 'calcul-de-x)
(push (& 7))
(hpxmov (& 8) '13 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
105
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(push a4)
(push (@ 106))
(push 'calcul-de-y)
(push (& 8))
(hpxmov (& 9) '13 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
106
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(hpxmov (& 6) '14 a3)
(diff '1 a3)
(push a3)
(push a4)
107
(cnblt (& 1) '0 108)
(push (@ 109))
(mov (& 5) a4)
(plus (& 2) a4)
(push a4)
(mov (& 5) a4)
(plus (& 3) a4)
(push a4)
(mov (& 5) a4)
(plus (& 4) a4)
(push a4)
(mov (& 4) a4)
(plus (& 5) a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
109
(eval ())
(mov (& 1) a4)
(diff '1 a4)
(mov a4 (& 1))
(bra 107)
108
(mov nil a1)
(adjstk '9)
(return)
))
(remprop '#:image:rectangle:objet-graph:segment:display '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:segment:show subr1)
(entry #:image:rectangle:objet-graph:segment:show subr1)
(push a1)
(push (@ 101))
(push '2)
(hpxmov a1 '14 a4)
(plus '1 a4)
(push a4)
(mov '2 a4)
(jmp min)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '14)
(return)
))
(remprop '#:image:rectangle:objet-graph:segment:show '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:segment:hide subr1)
(entry #:image:rectangle:objet-graph:segment:hide subr1)
(push a1)
(push (@ 101))
(hpxmov a1 '14 a4)
(diff '1 a4)
(push a4)
(push '0)
(mov '2 a4)
(jmp max)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '14)
(return)
))
(remprop '#:image:rectangle:objet-graph:segment:hide '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:droite-technique)
(loader'((entry #:image:rectangle:objet-graph:droite-technique:create subr0)
(mov '#:image:rectangle:objet-graph:droite-technique a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:droite-technique:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:initialize subr3)
(entry #:image:rectangle:objet-graph:droite-technique:initialize subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:droite-technique)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(hpmovx (& 2) (& 0) '13)
(hpmovx '1 (& 0) '14)
(mov (& 0) a1)
(adjstk '3)
(return)
))
(remprop '#:image:rectangle:objet-graph:droite-technique:initialize '#:system:loaded-from-file)
(loader'((fentry droite subr2)
(entry droite subr2)
(push a2)
(push a1)
(call #:image:rectangle:objet-graph:droite-technique:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:droite-technique:initialize)
))
(remprop 'droite '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:display nsubr)
(entry #:image:rectangle:objet-graph:droite-technique:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:droite-technique:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push '0)
(push (@ 101))
(push 'min-y)
(push (& 6))
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push '0)
(push (@ 102))
(push 'max-y)
(push (& 8))
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(hpxmov (& 7) '12 a4)
(cabeq a4 '0 103)
(push (@ 105))
(hpxmov (& 8) '13 a4)
(push a4)
(push (@ 106))
(push (& 5))
(hpxmov (& 11) '12 a4)
(push a4)
(mov '2 a4)
(jmp /)
106
(eval ())
(push a1)
(mov '2 a4)
(jmp +)
105
(eval ())
(mov a1 (& 3))
(push (@ 107))
(hpxmov (& 8) '13 a4)
(push a4)
(push (@ 108))
(push (& 3))
(hpxmov (& 11) '12 a4)
(push a4)
(mov '2 a4)
(jmp /)
108
(eval ())
(push a1)
(mov '2 a4)
(jmp +)
107
(eval ())
(mov a1 (& 1))
(push (@ 109))
(push 'calcul-de-x)
(push (& 9))
(push (& 6))
(mov '3 a4)
(jmp send)
109
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 110))
(push 'calcul-de-y)
(push (& 10))
(push (& 6))
(mov '3 a4)
(jmp send)
110
(eval ())
(mov (& 6) a4)
(plus a1 a4)
(push a4)
(push (@ 111))
(push 'calcul-de-x)
(push (& 11))
(push (& 6))
(mov '3 a4)
(jmp send)
111
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(push a4)
(push (@ 112))
(push 'calcul-de-y)
(push (& 12))
(push (& 6))
(mov '3 a4)
(jmp send)
112
(eval ())
(mov (& 8) a4)
(plus a1 a4)
(hpxmov (& 10) '14 a3)
(diff '1 a3)
(push a3)
(push a4)
113
(cnblt (& 1) '0 114)
(push (@ 115))
(mov (& 2) a4)
(plus (& 5) a4)
(push a4)
(mov (& 3) a4)
(plus (& 5) a4)
(push a4)
(mov (& 4) a4)
(plus (& 5) a4)
(push a4)
(mov (& 5) a4)
(plus (& 4) a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
115
(eval ())
(mov (& 1) a4)
(diff '1 a4)
(mov a4 (& 1))
(bra 113)
114
(mov nil a1)
(adjstk '13)
(return)
103
(mov nil a1)
(adjstk '8)
(return)
))
(remprop '#:image:rectangle:objet-graph:droite-technique:display '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:show subr1)
(entry #:image:rectangle:objet-graph:droite-technique:show subr1)
(push a1)
(push (@ 101))
(push '2)
(hpxmov a1 '14 a4)
(plus '1 a4)
(push a4)
(mov '2 a4)
(jmp min)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '14)
(return)
))
(remprop '#:image:rectangle:objet-graph:droite-technique:show '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:droite-technique:hide subr1)
(entry #:image:rectangle:objet-graph:droite-technique:hide subr1)
(push a1)
(push (@ 101))
(push '0)
(hpxmov a1 '14 a4)
(diff '1 a4)
(push a4)
(mov '2 a4)
(jmp max)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '14)
(return)
))
(remprop '#:image:rectangle:objet-graph:droite-technique:hide '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:figure)
(loader'((fentry #:image:rectangle:objet-graph:figure:create subr0)
(entry #:image:rectangle:objet-graph:figure:create subr0)
(mov '#:image:rectangle:objet-graph:figure a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:figure:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:initialize subr3)
(entry #:image:rectangle:objet-graph:figure:initialize subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:figure)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(hpmovx (& 2) (& 0) '13)
(mov (& 0) a1)
(adjstk '3)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:initialize '#:system:loaded-from-file)
(loader'((fentry figure subr2)
(entry figure subr2)
(push a2)
(push a1)
(jcall #:image:rectangle:objet-graph:figure:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:figure:initialize)
))
(remprop 'figure '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:min-x subr2)
(entry #:image:rectangle:objet-graph:figure:min-x subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'min-x)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'min-x)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:min-x '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:min-y subr2)
(entry #:image:rectangle:objet-graph:figure:min-y subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'min-y)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'min-y)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:min-y '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:max-x subr2)
(entry #:image:rectangle:objet-graph:figure:max-x subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'max-x)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'max-x)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:max-x '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:max-y subr2)
(entry #:image:rectangle:objet-graph:figure:max-y subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'max-y)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'max-y)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:max-y '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:ech-x subr2)
(entry #:image:rectangle:objet-graph:figure:ech-x subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'ech-x)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'ech-x)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:ech-x '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:ech-y subr2)
(entry #:image:rectangle:objet-graph:figure:ech-y subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'ech-y)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'ech-y)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:ech-y '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:h-total subr2)
(entry #:image:rectangle:objet-graph:figure:h-total subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'h-total)
(hpxmov a1 '12 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'h-total)
(hpxmov (& 2) '13 a4)
(push a4)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:h-total '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:show subr1)
(entry #:image:rectangle:objet-graph:figure:show subr1)
(push a1)
(push (@ 101))
(push 'show)
(hpxmov a1 '12 a4)
(push a4)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'show)
(hpxmov (& 2) '13 a4)
(push a4)
(mov '2 a4)
(jmp send)
102
(eval ())
(adjstk '1)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:show '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:hide subr1)
(entry #:image:rectangle:objet-graph:figure:hide subr1)
(push a1)
(push (@ 101))
(push 'hide)
(hpxmov a1 '12 a4)
(push a4)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'hide)
(hpxmov (& 2) '13 a4)
(push a4)
(mov '2 a4)
(jmp send)
102
(eval ())
(adjstk '1)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:hide '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:display nsubr)
(entry #:image:rectangle:objet-graph:figure:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:figure:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'display)
(hpxmov (& 5) '12 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'display)
(hpxmov (& 5) '13 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp send)
102
(eval ())
(adjstk '4)
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:display '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:figure:canal)
(loader'((fentry #:image:rectangle:objet-graph:figure:canal:create subr0)
(entry #:image:rectangle:objet-graph:figure:canal:create subr0)
(mov '#:image:rectangle:objet-graph:figure:canal a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:figure:canal:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:canal:initialize subr3)
(entry #:image:rectangle:objet-graph:figure:canal:initialize subr3)
(push (@ 101))
(push '#:image:rectangle:objet-graph:figure:canal)
(push 'initialize)
(push a1)
(push a2)
(push a3)
(mov '5 a4)
(jmp send-super)
101
(eval ())
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:canal:initialize '#:system:loaded-from-file)
(loader'((fentry canal subr2)
(entry canal subr2)
(push a2)
(push a1)
(jcall #:image:rectangle:objet-graph:figure:canal:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:figure:canal:initialize)
))
(remprop 'canal '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:figure:ctriangle)
(loader'((fentry #:image:rectangle:objet-graph:figure:ctriangle:create subr0)
(entry #:image:rectangle:objet-graph:figure:ctriangle:create subr0)
(mov '#:image:rectangle:objet-graph:figure:ctriangle a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:figure:ctriangle:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:figure:ctriangle:initialize subr3)
(entry #:image:rectangle:objet-graph:figure:ctriangle:initialize subr3)
(push (@ 101))
(push '#:image:rectangle:objet-graph:figure:ctriangle)
(push 'initialize)
(push a1)
(push a2)
(push a3)
(mov '5 a4)
(jmp send-super)
101
(eval ())
(return)
))
(remprop '#:image:rectangle:objet-graph:figure:ctriangle:initialize '#:system:loaded-from-file)
(loader'((fentry ctriangle subr2)
(entry ctriangle subr2)
(push a2)
(push a1)
(jcall #:image:rectangle:objet-graph:figure:ctriangle:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:figure:ctriangle:initialize)
))
(remprop 'ctriangle '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:fleche)
(loader'((entry #:image:rectangle:objet-graph:fleche:create subr0)
(mov '#:image:rectangle:objet-graph:fleche a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:fleche:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:fleche:initialize nsubr)
(entry #:image:rectangle:objet-graph:fleche:initialize nsubr)
(cnbeq a4 '5 0)
(mov '#:image:rectangle:objet-graph:fleche:initialize a1)
(mov '5 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche)
(push 'initialize)
(push (& 7))
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(push (@ 102))
(push 'liste-de-points)
(push (& 2))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov a1 a2)
(mov (& 1) a1)
(jcall get-nth)
(hpmovx a1 (& 4) '12)
(hpmovx (& 3) (& 4) '13)
(hpmovx (& 2) (& 4) '14)
(hpmovx (& 1) (& 4) '15)
(hpmovx (& 0) (& 4) '16)
(mov (& 4) a1)
(adjstk '5)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:initialize '#:system:loaded-from-file)
(loader'((fentry fleche nsubr)
(entry fleche nsubr)
(cnbeq a4 '4 0)
(mov 'fleche a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(call #:image:rectangle:objet-graph:fleche:create)
(push a1)
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp #:image:rectangle:objet-graph:fleche:initialize)
101
(eval ())
(adjstk '4)
(return)
))
(remprop 'fleche '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:fleche:decal-w subr1)
(push (@ 101))
(hpxmov a1 '14 a4)
(push a4)
(push (@ 102))
(push (cvalq #:image:rectangle:objet-graph:fleche:pi/4))
(hpxmov a1 '13 a4)
(push a4)
(mov '2 a4)
(jmp *)
102
(eval ())
(jcall cos)
(push a1)
(mov '2 a4)
(jmp *)
101
(eval ())
(jmp fix)
))
(remprop '#:image:rectangle:objet-graph:fleche:decal-w '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:fleche:decal-h subr1)
(push (@ 101))
(hpxmov a1 '14 a4)
(push a4)
(push (@ 102))
(push (cvalq #:image:rectangle:objet-graph:fleche:pi/4))
(hpxmov a1 '13 a4)
(push a4)
(mov '2 a4)
(jmp *)
102
(eval ())
(jcall sin)
(push a1)
(mov '2 a4)
(jmp *)
101
(eval ())
(jmp fix)
))
(remprop '#:image:rectangle:objet-graph:fleche:decal-h '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:fleche:x-fin-de-fleche-reel subr1)
(push a1)
(call #:image:rectangle:objet-graph:fleche:decal-w)
(push a1)
(push (@ 101))
(push 'calcul-de-x)
(push (& 3))
(hpxmov (& 4) '12 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(pop a4)
(plus a1 a4)
(mov a4 a1)
(adjstk '1)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:x-fin-de-fleche-reel '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:fleche:y-fin-de-fleche-reel subr1)
(push a1)
(call #:image:rectangle:objet-graph:fleche:decal-h)
(push a1)
(push (@ 101))
(push 'calcul-de-y)
(push (& 3))
(hpxmov (& 4) '12 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(pop a4)
(plus a1 a4)
(mov a4 a1)
(adjstk '1)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:y-fin-de-fleche-reel '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:fleche:display nsubr)
(entry #:image:rectangle:objet-graph:fleche:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:fleche:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'calcul-de-x)
(push (& 5))
(hpxmov (& 6) '12 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 102))
(push 'calcul-de-y)
(push (& 6))
(hpxmov (& 7) '12 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
102
(eval ())
(push a1)
(mov (& 5) a1)
(call #:image:rectangle:objet-graph:fleche:decal-w)
(push a1)
(mov (& 6) a1)
(call #:image:rectangle:objet-graph:fleche:decal-h)
(push a1)
(mov (& 6) a4)
(plus (& 3) a4)
(mov (& 5) a3)
(plus (& 2) a3)
(push a3)
(mov '1 a3)
(pop a2)
(mov a4 a1)
(jcall draw-circle)
(push (@ 103))
(mov (& 7) a4)
(plus (& 4) a4)
(push a4)
(mov (& 7) a4)
(plus (& 4) a4)
(push a4)
(mov (& 6) a4)
(plus (& 4) a4)
(mov (& 9) a3)
(plus a4 a3)
(push a3)
(mov (& 6) a4)
(plus (& 4) a4)
(mov (& 9) a3)
(plus a4 a3)
(push a3)
(mov '4 a4)
(jmp draw-line)
103
(eval ())
(adjstk '8)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:display '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:fleche:texte-sur-fleche)
(loader'((entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:create subr0)
(mov '#:image:rectangle:objet-graph:fleche:texte-sur-fleche a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:initialize nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:initialize nsubr)
(cnbeq a4 '10 0)
(mov '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:initialize a1)
(mov '10 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '#:image:rectangle:objet-graph:fleche:texte-sur-fleche)
(push 'initialize)
(push (& 12))
(push (& 12))
(push (& 12))
(push (& 12))
(push (& 12))
(mov '7 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 4) (& 9) '17)
(hpmovx (& 3) (& 9) '18)
(hpmovx (& 2) (& 9) '19)
(hpmovx (& 1) (& 9) '20)
(hpmovx (& 0) (& 9) '21)
(mov (& 9) a1)
(adjstk '10)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:initialize '#:system:loaded-from-file)
(loader'((fentry simple-texte nsubr)
(entry simple-texte nsubr)
(cnbeq a4 '5 0)
(mov 'simple-texte a1)
(mov '5 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push (& 5))
(push '20)
(push (& 6))
(push (& 6))
(push '0)
(push (& 7))
(push nil)
(push nil)
(push (& 9))
(mov '9 a4)
(jmp texte-sur-fleche)
101
(eval ())
(adjstk '5)
(return)
))
(remprop 'simple-texte '#:system:loaded-from-file)
(loader'((fentry indicateur-de-pattern nsubr)
(entry indicateur-de-pattern nsubr)
(cnbeq a4 '4 0)
(mov 'indicateur-de-pattern a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '2)
(push '20)
(push (& 6))
(push (& 6))
(push '0)
(push (& 7))
(push '0)
(push 't)
(push (& 9))
(mov '9 a4)
(jmp texte-sur-fleche)
101
(eval ())
(adjstk '4)
(return)
))
(remprop 'indicateur-de-pattern '#:system:loaded-from-file)
(loader'((fentry texte-sur-fleche nsubr)
(entry texte-sur-fleche nsubr)
(cnbeq a4 '9 0)
(mov 'texte-sur-fleche a1)
(mov '9 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(call #:image:rectangle:objet-graph:fleche:texte-sur-fleche:create)
(push a1)
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(mov '10 a4)
(jmp #:image:rectangle:objet-graph:fleche:texte-sur-fleche:initialize)
101
(eval ())
(adjstk '9)
(return)
))
(remprop 'texte-sur-fleche '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:display nsubr)
(entry #:image:rectangle:objet-graph:fleche:texte-sur-fleche:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(mov (& 3) a1)
(call #:image:rectangle:objet-graph:fleche:x-fin-de-fleche-reel)
(push a1)
(mov (& 4) a1)
(call #:image:rectangle:objet-graph:fleche:y-fin-de-fleche-reel)
(push nil)
(push nil)
(push nil)
(push nil)
(push a1)
(hpxmov (& 9) '19 a4)
(bfnil a4 102)
(hpmovx '0 (& 9) '19)
102
(hpxmov (cvalq #:graph-env:current-graph-env) '0 a4)
(push a4)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(hpxmov (& 13) '19 a1)
(jcall current-font1)
(hpxmov (& 13) '18 a1)
(hpxmov (& 13) '18 a3)
(hgsize a3 a3)
(mov '0 a2)
(jcall width-substring)
(mov a1 (& 6))
(hpxmov (& 13) '18 a1)
(hpxmov (& 13) '18 a3)
(hgsize a3 a3)
(mov '0 a2)
(jcall height-substring)
(mov a1 (& 5))
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-font1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '1)
(push (@ 105))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(mov '4 a4)
(jmp #:image:rectangle:objet-graph:fleche:display)
105
(eval ())
(hpxmov (& 9) '21 a4)
(cabne a4 'tete 106)
(hpxmov (& 9) '17 a4)
(plus (& 5) a4)
(mov a4 (& 4))
(mov a4 (& 3))
(bra 107)
106
(hpxmov (& 9) '21 a4)
(cabne a4 'queue 108)
(hpxmov (& 9) '17 a4)
(mov (& 5) a3)
(diff a4 a3)
(mov a3 (& 4))
(diff (& 2) a3)
(mov a3 (& 3))
(bra 107)
108
(mov (cvalq #:image:rectangle:objet-graph:fleche:texte-sur-fleche:petite-long) a4)
(plus (& 5) a4)
(mov a4 (& 4))
(mov a4 (& 3))
107
(push (@ 110))
(mov (& 9) a4)
(plus (& 6) a4)
(push a4)
(mov (& 9) a4)
(plus (& 2) a4)
(push a4)
(mov (& 11) a4)
(plus (& 7) a4)
(push a4)
(mov (& 11) a4)
(plus (& 4) a4)
(push a4)
(mov '4 a4)
(jmp draw-line)
110
(eval ())
(push (@ 111))
(hpxmov (& 10) '18 a4)
(push a4)
(hpxmov (& 11) '19 a4)
(push a4)
(push (& 6))
(push (& 4))
(push (& 7))
(push (& 7))
(hpxmov (& 16) '20 a4)
(push a4)
(push nil)
(mov '8 a4)
(bra my-draw-texte)
111
(eval ())
(adjstk '10)
(return)
))
(remprop '#:image:rectangle:objet-graph:fleche:texte-sur-fleche:display '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:indicateur-volume)
(loader'((entry #:image:rectangle:objet-graph:indicateur-volume:create subr0)
(mov '#:image:rectangle:objet-graph:indicateur-volume a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:indicateur-volume:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-volume:initialize subr2)
(entry #:image:rectangle:objet-graph:indicateur-volume:initialize subr2)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-volume)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(hpmovx (& 1) (& 0) '12)
(mov (& 1) a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(mov (& 1) a1)
(jcall get-max-point-y)
(hpmovx a1 (& 0) '13)
(mov (& 0) a1)
(adjstk '2)
(return)
))
(remprop '#:image:rectangle:objet-graph:indicateur-volume:initialize '#:system:loaded-from-file)
(loader'((fentry indicateur-volume subr1)
(entry indicateur-volume subr1)
(push a1)
(call #:image:rectangle:objet-graph:indicateur-volume:create)
(mov (& 0) a2)
(adjstk '1)
(jmp #:image:rectangle:objet-graph:indicateur-volume:initialize)
))
(remprop 'indicateur-volume '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-volume:display nsubr)
(entry #:image:rectangle:objet-graph:indicateur-volume:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:indicateur-volume:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'calcul-de-x)
(push (& 5))
(hpxmov (& 6) '13 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 102))
(push 'calcul-de-y)
(push (& 6))
(hpxmov (& 7) '13 a1)
(jcall #:point:get-y)
(push a1)
(mov '3 a4)
(jmp send)
102
(eval ())
(push a1)
(push (@ 103))
(mov (& 5) a4)
(plus (& 2) a4)
(push a4)
(diff '3 a1)
(mov (& 5) a4)
(plus a1 a4)
(push a4)
(mov (cvalq #:image:rectangle:objet-graph:indicateur-volume:length) a4)
(plus (& 4) a4)
(mov (& 7) a3)
(plus a4 a3)
(push a3)
(mov (cvalq #:image:rectangle:objet-graph:indicateur-volume:length) a4)
(plus (& 4) a4)
(mov (& 7) a3)
(plus a4 a3)
(push a3)
(mov '4 a4)
(jmp draw-line)
103
(eval ())
(push (@ 104))
(mov (& 2) a4)
(diff '1 a4)
(mov (& 5) a3)
(plus a4 a3)
(push a3)
(mov (& 2) a4)
(diff '3 a4)
(mov (& 5) a3)
(plus a4 a3)
(push a3)
(mov (& 4) a4)
(diff '1 a4)
(diff (cvalq #:image:rectangle:objet-graph:indicateur-volume:length) a4)
(mov (& 7) a3)
(plus a4 a3)
(push a3)
(mov (cvalq #:image:rectangle:objet-graph:indicateur-volume:length) a4)
(plus (& 4) a4)
(mov (& 7) a3)
(plus a4 a3)
(push a3)
(mov '4 a4)
(jmp draw-line)
104
(eval ())
(adjstk '6)
(return)
))
(remprop '#:image:rectangle:objet-graph:indicateur-volume:display '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:indicateur-etendu)
(loader'((entry #:image:rectangle:objet-graph:indicateur-etendu:create subr0)
(mov '#:image:rectangle:objet-graph:indicateur-etendu a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:indicateur-etendu:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:initialize nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:initialize nsubr)
(cnbeq a4 '7 0)
(mov '#:image:rectangle:objet-graph:indicateur-etendu:initialize a1)
(mov '7 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '#:image:rectangle:objet-graph:indicateur-etendu)
(push 'initialize)
(push (& 9))
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(push (@ 102))
(push 'liste-de-points)
(push (& 7))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov a1 a2)
(mov (& 4) a1)
(jcall get-nth)
(hpmovx a1 (& 6) '12)
(hpmovx (& 4) (& 6) '13)
(push (@ 103))
(push 'liste-de-points)
(push (& 7))
(mov '2 a4)
(jmp send)
103
(eval ())
(mov a1 a2)
(mov (& 3) a1)
(jcall get-nth)
(hpmovx a1 (& 6) '14)
(hpmovx (& 3) (& 6) '15)
(hpmovx (& 5) (& 6) '16)
(hpmovx (& 2) (& 6) '17)
(hpmovx (& 1) (& 6) '18)
(hpmovx (& 0) (& 6) '19)
(mov (& 6) a1)
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:indicateur-etendu:initialize '#:system:loaded-from-file)
(loader'((fentry indicateur-etendu nsubr)
(entry indicateur-etendu nsubr)
(cnbeq a4 '6 0)
(mov 'indicateur-etendu a1)
(mov '6 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(call #:image:rectangle:objet-graph:indicateur-etendu:create)
(push a1)
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp #:image:rectangle:objet-graph:indicateur-etendu:initialize)
101
(eval ())
(adjstk '6)
(return)
))
(remprop 'indicateur-etendu '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:indicateur-etendu:display nsubr)
(entry #:image:rectangle:objet-graph:indicateur-etendu:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:indicateur-etendu:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push 'liste-de-points)
(hpxmov (& 5) '16 a4)
(push a4)
(mov '2 a4)
(jmp send)
101
(eval ())
(hpxmov (& 3) '13 a2)
(hpxmov (& 3) '15 a3)
(jcall min-x)
(push a1)
(push (@ 102))
(push 'liste-de-points)
(hpxmov (& 6) '16 a4)
(push a4)
(mov '2 a4)
(jmp send)
102
(eval ())
(hpxmov (& 4) '13 a2)
(hpxmov (& 4) '15 a3)
(jcall min-y)
(push a1)
(push (@ 103))
(push 'liste-de-points)
(hpxmov (& 7) '16 a4)
(push a4)
(mov '2 a4)
(jmp send)
103
(eval ())
(hpxmov (& 5) '13 a2)
(hpxmov (& 5) '15 a3)
(jcall max-x)
(push a1)
(push (@ 104))
(push 'liste-de-points)
(hpxmov (& 8) '16 a4)
(push a4)
(mov '2 a4)
(jmp send)
104
(eval ())
(hpxmov (& 6) '13 a2)
(hpxmov (& 6) '15 a3)
(jcall max-y)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push (@ 105))
(push 'calcul-de-x)
(push (& 14))
(push (& 11))
(mov '3 a4)
(jmp send)
105
(eval ())
(mov a1 (& 8))
(push (@ 106))
(push 'calcul-de-y)
(push (& 14))
(push (& 10))
(mov '3 a4)
(jmp send)
106
(eval ())
(mov a1 (& 7))
(push (@ 107))
(push 'calcul-de-x)
(push (& 14))
(push (& 9))
(mov '3 a4)
(jmp send)
107
(eval ())
(mov a1 (& 6))
(push (@ 108))
(push 'calcul-de-y)
(push (& 14))
(push (& 8))
(mov '3 a4)
(jmp send)
108
(eval ())
(mov a1 (& 5))
(push (@ 109))
(push 'super)
(push (@ 110))
(push 'calcul-de-x)
(push (& 16))
(hpxmov (& 17) '12 a1)
(jcall #:point:get-x)
(push a1)
(mov '3 a4)
(jmp send)
110
(eval ())
(mov (& 13) a4)
(plus a1 a4)
(push a4)
(mov (& 13) a4)
(plus (& 8) a4)
(push a4)
(mov (& 10) a4)
(diff (& 12) a4)
(push a4)
(mov (& 12) a4)
(diff (& 10) a4)
(push a4)
(mov '5 a4)
(bra my-draw-rectangle)
109
(eval ())
(hpxmov (& 12) '18 a4)
(bfnil a4 112)
(hpmovx '0 (& 12) '18)
112
(hpxmov (cvalq #:graph-env:current-graph-env) '0 a4)
(push a4)
(push (@ 113))
(push dlink)
(push prot)
(stack dlink)
(hpxmov (& 16) '18 a1)
(jcall current-font1)
(hpxmov (& 16) '17 a1)
(hpxmov (& 16) '17 a3)
(hgsize a3 a3)
(mov '0 a2)
(jcall width-substring)
(mov a1 (& 6))
(hpxmov (& 16) '17 a1)
(hpxmov (& 16) '17 a3)
(hgsize a3 a3)
(mov '0 a2)
(jcall height-substring)
(mov a1 (& 5))
(jcall y-base-space)
(mov a1 (& 4))
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 114) a3)
113
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-font1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
114
(eval ())
(adjstk '1)
(mov (& 6) a4)
(diff (& 8) a4)
(quo '2 a4)
(mov (& 2) a3)
(quo '2 a3)
(diff a3 a4)
(mov (& 8) a3)
(plus a4 a3)
(mov a3 (& 4))
(mov (& 5) (& 3))
(push (@ 115))
(hpxmov (& 13) '17 a4)
(push a4)
(hpmovx '0 (& 14) '18)
(push '0)
(mov (& 14) a4)
(plus a3 a4)
(push a4)
(mov (& 14) a4)
(plus (& 7) a4)
(push a4)
(push (& 7))
(push (& 7))
(hpxmov (& 19) '19 a4)
(push a4)
(push nil)
(mov '8 a4)
(bra my-draw-texte)
115
(eval ())
(adjstk '13)
(return)
))
(remprop '#:image:rectangle:objet-graph:indicateur-etendu:display '#:system:loaded-from-file)
(loader'((entry my-draw-rectangle nsubr)
(cabne (& 4) 'super 101)
(push (@ 103))
(push (& 4))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '4 a4)
(jmp draw-rectangle)
103
(eval ())
(push (@ 104))
(mov (& 4) a4)
(diff '1 a4)
(push a4)
(mov (& 4) a4)
(diff '1 a4)
(push a4)
(mov '2 a4)
(plus (& 4) a4)
(push a4)
(mov '2 a4)
(plus (& 4) a4)
(push a4)
(mov '4 a4)
(jmp draw-rectangle)
104
(eval ())
(adjstk '5)
(return)
101
(push (@ 105))
(push (& 4))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '4 a4)
(jmp draw-rectangle)
105
(eval ())
(adjstk '5)
(return)
))
(remprop 'my-draw-rectangle '#:system:loaded-from-file)
(loader'((entry my-draw-texte nsubr)
(push nil)
(hpxmov (cvalq #:graph-env:current-graph-env) '0 a4)
(push a4)
(push (@ 101))
(push dlink)
(push prot)
(stack dlink)
(mov (& 11) a1)
(jcall current-font1)
(jcall y-base-space)
(mov a1 (& 4))
(push (& 12))
(push (@ 103))
(push (& 12))
(mov (& 10) a4)
(diff a1 a4)
(mov (& 12) a3)
(diff a4 a3)
(push a3)
(push (& 3))
(push '0)
(hgsize (& 5) a4)
(push a4)
(mov '5 a4)
(jmp draw-substring)
103
(eval ())
(adjstk '1)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 102) a3)
101
(push a3)
(push a2)
(mov (& 3) a1)
(jcall current-font1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
102
(eval ())
(adjstk '1)
(btnil (& 2) 104)
(push (@ 106))
(push (& 2))
(mov (& 8) a4)
(diff '2 a4)
(push a4)
(mov (& 6) a4)
(plus '1 a4)
(mov (& 8) a3)
(diff a4 a3)
(push a3)
(mov '2 a4)
(plus (& 8) a4)
(push a4)
(push (& 8))
(mov '5 a4)
(bra my-draw-rectangle)
106
(eval ())
(adjstk '9)
(return)
104
(mov nil a1)
(adjstk '9)
(return)
))
(remprop 'my-draw-texte '#:system:loaded-from-file)
(setq #:sys-package:colon '#:image:rectangle:objet-graph:points-et-figures)
(loader'((entry #:image:rectangle:objet-graph:points-et-figures:create subr0)
(mov '#:image:rectangle:objet-graph:points-et-figures a1)
(jmp new)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:create '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:points-et-figures:initialize subr3)
(entry #:image:rectangle:objet-graph:points-et-figures:initialize subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push '#:image:rectangle:objet-graph:points-et-figures)
(push 'initialize)
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp send-super)
101
(eval ())
(jcall width-space)
(hpmovx a1 (& 0) '12)
(hpmovx (& 1) (& 0) '13)
(hpmovx (& 2) (& 0) '14)
(mov (& 0) a1)
(adjstk '3)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:initialize '#:system:loaded-from-file)
(loader'((fentry points-et-figures subr2)
(entry points-et-figures subr2)
(push a2)
(push a1)
(call #:image:rectangle:objet-graph:points-et-figures:create)
(mov (& 1) a3)
(mov (& 0) a2)
(adjstk '2)
(jmp #:image:rectangle:objet-graph:points-et-figures:initialize)
))
(remprop 'points-et-figures '#:system:loaded-from-file)
(loader'((fentry #:image:rectangle:objet-graph:points-et-figures:display nsubr)
(entry #:image:rectangle:objet-graph:points-et-figures:display nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:objet-graph:points-et-figures:display a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(hpxmov (& 3) '14 a4)
(push a4)
(mov a4 a1)
(jcall get-length)
(push a1)
(push '0)
(push (@ 101))
(push 'x)
(push (& 8))
(mov '2 a4)
(jmp send)
101
(eval ())
(mov (& 5) a4)
(plus a1 a4)
(mov a4 (& 5))
(push (@ 102))
(push 'y)
(push (& 8))
(mov '2 a4)
(jmp send)
102
(eval ())
(mov (& 4) a4)
(plus a1 a4)
(mov a4 (& 4))
(cabeq '0 (& 1) 103)
105
(mov (& 1) a4)
(diff '1 a4)
(cnbgt (& 0) a4 106)
(push (@ 107))
(push (& 7))
(push (& 7))
(push (& 7))
(hpxmov (& 6) (& 4) a4)
(push a4)
(mov '4 a4)
(bra #:image:rectangle:objet-graph:points-et-figures:display-cn)
107
(eval ())
(mov (& 0) a1)
(jcall 1+)
(mov a1 (& 0))
(bra 105)
106
(mov nil a1)
(adjstk '7)
(return)
103
(mov nil a1)
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:display '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:points-et-figures:display-cn nsubr)
(mov (& 0) a1)
(call #:image:rectangle:objet-graph:points-et-figures:get-x)
(hpxmov (& 3) '12 a4)
(times a4 a1)
(mov (& 2) a4)
(plus a1 a4)
(push a4)
(push (@ 101))
(push 'calcul-de-y)
(push (& 6))
(mov (& 4) a1)
(call #:image:rectangle:objet-graph:points-et-figures:get-y)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(mov (& 2) a4)
(plus a1 a4)
(push a4)
(mov (& 2) a1)
(call #:image:rectangle:objet-graph:points-et-figures:get-cn)
(push a1)
(mov (cvalq #:image:rectangle:objet-graph:points-et-figures:chiffres-et-autres) a2)
(jcall member)
(btnil a1 102)
(push (& 0))
(push (@ 104))
(push (& 4))
(push (& 4))
(push (& 3))
(push '0)
(hgsize (& 5) a4)
(push a4)
(mov '5 a4)
(jmp draw-substring)
104
(eval ())
(adjstk '8)
(return)
102
(mov nil a1)
(adjstk '7)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:display-cn '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:points-et-figures:get-x subr1)
(mov (car a1) a1)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:get-x '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:points-et-figures:get-y subr1)
(mov (cdr a1) a1)
(mov (car a1) a1)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:get-y '#:system:loaded-from-file)
(loader'((entry #:image:rectangle:objet-graph:points-et-figures:get-cn subr1)
(mov (cdr a1) a1)
(mov (cdr a1) a1)
(mov (car a1) a1)
(return)
))
(remprop '#:image:rectangle:objet-graph:points-et-figures:get-cn '#:system:loaded-from-file)
(loader '((end)))
