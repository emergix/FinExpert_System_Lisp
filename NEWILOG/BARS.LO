(loader '((title |bars.lo|)))
(put-abbrev 'bars-and-charts '#:image:rectangle:application:bars-and-charts)
(putprop '#:image:rectangle:application:bars-and-charts '((() () ()) controleur courbes-map valeur?) 'defstruct)
(loader'((fentry #:image:rectangle:application:bars-and-charts:make subr0)
(entry #:image:rectangle:application:bars-and-charts:make subr0)
(push (@ 101))
(push '0)
(push '0)
(push '1)
(push '1)
(push nil)
(push (@ 102))
(mov '0 a4)
(jmp view)
102
(eval ())
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '10 a4)
(jmp vector)
101
(eval ())
(push a1)
(push (@ 103))
(push a1)
(push '#:image:rectangle:application:bars-and-charts)
(mov '2 a4)
(jmp typevector)
103
(eval ())
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:controleur nsubr)
(entry #:image:rectangle:application:bars-and-charts:controleur nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:application:bars-and-charts:controleur)
(push '7)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (progn (putprop '#:image:rectangle:application:bars-and-charts:controleur '#:image:rectangle:application:bars-and-charts:controleur 'setf-inverse) '#:image:rectangle:application:bars-and-charts:controleur)))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:application:bars-and-charts:controleur (struct . valeur) (ifn valeur (list 'vref struct 7) (list 'vset struct 7 (car valeur))))))
(loader'((fentry #:image:rectangle:application:bars-and-charts:courbes-map nsubr)
(entry #:image:rectangle:application:bars-and-charts:courbes-map nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:application:bars-and-charts:courbes-map)
(push '8)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (progn (putprop '#:image:rectangle:application:bars-and-charts:courbes-map '#:image:rectangle:application:bars-and-charts:courbes-map 'setf-inverse) '#:image:rectangle:application:bars-and-charts:courbes-map)))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:application:bars-and-charts:courbes-map (struct . valeur) (ifn valeur (list 'vref struct 8) (list 'vset struct 8 (car valeur))))))
(loader'((fentry #:image:rectangle:application:bars-and-charts:valeur? nsubr)
(entry #:image:rectangle:application:bars-and-charts:valeur? nsubr)
(push a4)
(push (@ 101))
(push '#:image:rectangle:application:bars-and-charts:valeur?)
(push '9)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (progn (putprop '#:image:rectangle:application:bars-and-charts:valeur? '#:image:rectangle:application:bars-and-charts:valeur? 'setf-inverse) '#:image:rectangle:application:bars-and-charts:valeur?)))
(if (featurep 'compiler) (progn (defmacro-open #:image:rectangle:application:bars-and-charts:valeur? (struct . valeur) (ifn valeur (list 'vref struct 9) (list 'vset struct 9 (car valeur))))))
(setq #:sys-package:colon '#:image:rectangle:application:bars-and-charts)
(loader'((fentry #:image:rectangle:application:bars-and-charts:create nsubr)
(entry #:image:rectangle:application:bars-and-charts:create nsubr)
(cnbeq a4 '4 0)
(mov '#:image:rectangle:application:bars-and-charts:create a1)
(mov '4 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push '#:image:rectangle:application:bars-and-charts)
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push nil)
(mov '6 a4)
(jmp application)
101
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:initialize nsubr)
(entry #:image:rectangle:application:bars-and-charts:initialize nsubr)
(cnbeq a4 '11 0)
(mov '#:image:rectangle:application:bars-and-charts:initialize a1)
(mov '11 a2)
(jmp #:llcp:errwna)
0
(push '0)
(push '0)
(mov (& 11) a3)
(mov 'interface a2)
(mov (& 12) a1)
(jcall add-component)
(mov (& 12) a3)
(mov 'bars-and-charts a2)
(mov (& 12) a1)
(jcall add-component)
(push (@ 101))
(push (& 13))
(push (& 12))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(mov '8 a4)
(bra #:image:rectangle:application:bars-and-charts:compute-controleur)
101
(eval ())
(hpmovx a1 (& 12) '7)
(push (@ 102))
(push 'width)
(hpxmov (& 14) '7 a4)
(push a4)
(mov '2 a4)
(jmp send)
102
(eval ())
(mov a1 (& 1))
(push (@ 103))
(push 'height)
(hpxmov (& 14) '7 a4)
(push a4)
(mov '2 a4)
(jmp send)
103
(eval ())
(mov a1 (& 0))
(push (@ 104))
(push 'set-image)
(push (& 14))
(push (@ 105))
(mov (& 16) a2)
(mov 'interface a1)
(jcall component)
(push a1)
(push (@ 106))
(push (@ 107))
(push '0)
(push '0)
(mov '30 a4)
(plus (& 10) a4)
(push a4)
(push '40)
(push 't)
(mov '5 a4)
(jmp beau-cadre)
107
(eval ())
(push a1)
(push (@ 108))
(push (& 17))
(push (& 17))
(mov '2 a4)
(jmp column)
108
(eval ())
(push a1)
(mov '2 a4)
(jmp %centeredview)
106
(eval ())
(push a1)
(push (@ 109))
(push (@ 110))
(push '0)
(push '0)
(mov '30 a4)
(plus (& 11) a4)
(push a4)
(mov '30 a4)
(plus (& 11) a4)
(push a4)
(push 't)
(mov '5 a4)
(jmp beau-cadre)
110
(eval ())
(push a1)
(push (@ 111))
(push (@ 112))
(push '0)
(push '0)
(push (& 13))
(push (& 13))
(push '0)
(mov '5 a4)
(jmp filledbox)
112
(eval ())
(push a1)
(push (@ 113))
(push '0)
(push '0)
(push (& 14))
(push (& 14))
(mov '4 a4)
(jmp box)
113
(eval ())
(push a1)
(hpxmov (& 23) '7 a4)
(push a4)
(mov '3 a4)
(jmp %view)
111
(eval ())
(push a1)
(mov '2 a4)
(jmp %centeredview)
109
(eval ())
(push a1)
(mov '3 a4)
(jmp column)
105
(eval ())
(push a1)
(mov '3 a4)
(jmp send)
104
(eval ())
(push (@ 114))
(push 'fit-to-contents)
(push (& 14))
(mov '2 a4)
(jmp send)
114
(eval ())
(mov (& 12) a1)
(adjstk '13)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:prin subr1)
(entry #:image:rectangle:application:bars-and-charts:prin subr1)
(push (@ 101))
(push '"Bars and charts")
(mov '1 a4)
(jmp prin)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:bars-and-charts nsubr)
(entry #:image:rectangle:application:bars-and-charts:bars-and-charts nsubr)
(cnbeq a4 '14 0)
(mov '#:image:rectangle:application:bars-and-charts:bars-and-charts a1)
(mov '14 a2)
(jmp #:llcp:errwna)
0
(push (@ 101))
(push (@ 102))
(push (& 15))
(push (& 15))
(push (& 15))
(push (& 15))
(mov '4 a4)
(jmp #:image:rectangle:application:bars-and-charts:create)
102
(eval ())
(push a1)
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(mov '11 a4)
(jmp #:image:rectangle:application:bars-and-charts:initialize)
101
(eval ())
(adjstk '14)
(return)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:compute-controleur nsubr)
(btnil (& 4) 101)
(push (@ 103))
(push 'width)
(push (& 9))
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (@ 104))
(push 'height)
(push (& 10))
(mov '2 a4)
(jmp send)
104
(eval ())
(push a1)
(push (@ 105))
(push 'mon-min-x)
(mov (& 8) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
105
(eval ())
(push a1)
(push (@ 106))
(push 'mon-min-y)
(mov (& 9) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 107))
(push 'mon-max-x)
(mov (& 10) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
107
(eval ())
(push a1)
(push (@ 108))
(push 'mon-max-y)
(mov (& 11) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
108
(eval ())
(push a1)
(push '0)
(push '0)
(push '0)
(push '0)
(push '0)
(push '0)
(push '0)
(push '0)
(push (@ 109))
(push (& 10))
(push (& 13))
(mov '2 a4)
(jmp -)
109
(eval ())
(push a1)
(push (@ 110))
(push (& 10))
(push (& 13))
(mov '2 a4)
(jmp -)
110
(eval ())
(push a1)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push '0)
(push '0)
(push nil)
(push '0)
(push '0)
(mov (& 33) a1)
(jcall #:image:rectangle:application:bars-and-charts:valeur-presente?)
(push a1)
(mov (& 29) a2)
(call #:image:rectangle:application:bars-and-charts:w-ech-v-v)
(push a1)
(mov (& 29) a2)
(mov (& 1) a1)
(call #:image:rectangle:application:bars-and-charts:h-ech-v-v)
(push a1)
(mov (& 31) a2)
(mov (& 2) a1)
(call #:image:rectangle:application:bars-and-charts:w-ech-h-v)
(push a1)
(mov (& 31) a2)
(mov (& 3) a1)
(call #:image:rectangle:application:bars-and-charts:h-ech-h-v)
(push a1)
(mov (& 33) a2)
(mov (& 4) a1)
(call #:image:rectangle:application:bars-and-charts:w-prin-v)
(push a1)
(mov (& 33) a2)
(mov (& 5) a1)
(call #:image:rectangle:application:bars-and-charts:h-prin-v)
(push a1)
(mov (& 35) a2)
(mov (& 6) a1)
(call #:image:rectangle:application:bars-and-charts:w-second-v)
(push a1)
(mov (& 35) a2)
(mov (& 7) a1)
(call #:image:rectangle:application:bars-and-charts:h-second-v)
(push a1)
(push nil)
(hpmovx (& 9) (& 46) '9)
(push (@ 111))
(push (& 37))
(push (& 26))
(mov '2 a4)
(jmp -)
111
(eval ())
(jcall fix)
(mov a1 (& 36))
(push (@ 112))
(push (& 36))
(push (& 25))
(mov '2 a4)
(jmp -)
112
(eval ())
(jcall fix)
(mov a1 (& 35))
(push (@ 113))
(push (& 35))
(push (& 26))
(mov '2 a4)
(jmp +)
113
(eval ())
(jcall fix)
(mov a1 (& 34))
(push (@ 114))
(push (& 34))
(push (& 25))
(mov '2 a4)
(jmp +)
114
(eval ())
(jcall fix)
(mov a1 (& 33))
(mov (& 35) (& 14))
(mov a1 (& 13))
(push (@ 115))
(mov nil a1)
(jcall h-cal-echelle)
(push a1)
(mov '1 a4)
(jmp list)
115
(eval ())
(mov a1 (& 15))
(btnil (& 9) 117)
(hpxmov (& 9) '20 a1)
(jcall v-histogramme)
(mov (& 15) a2)
(jcall cons)
(mov a1 (& 15))
(hpxmov (& 9) '20 a1)
(jcall indicateur-volume)
(mov (& 15) a2)
(jcall cons)
(mov a1 (& 15))
(mov '-10 (& 14))
(hpxmov (& 9) '20 a1)
(push a1)
(hpxmov (& 10) '20 a1)
(jcall get-length)
(diff '1 a1)
(mov a1 a3)
(mov '0 a2)
(pop a1)
(jcall max-y)
(mov a1 (& 13))
117
(push (@ 118))
(mov 't a1)
(jcall v-num-echelle)
(push a1)
(mov '1 a4)
(jmp list)
118
(eval ())
(mov a1 (& 12))
(push (@ 119))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 39))
(push (& 39))
(push (& 39))
(push (& 39))
(push (& 50))
(mov '7 a4)
(jmp presentateur)
119
(eval ())
(mov a1 (& 22))
(btnil (& 15) 121)
(push (@ 122))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 39))
(push (& 18))
(push (& 39))
(push (& 19))
(push (& 22))
(mov '7 a4)
(jmp presentateur)
122
(eval ())
(mov a1 (& 19))
121
(btnil (& 12) 124)
(push (@ 125))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 39))
(push (& 39))
(push (& 39))
(push (& 39))
(push (& 19))
(mov '7 a4)
(jmp presentateur)
125
(eval ())
(mov a1 (& 18))
124
(btnil (& 41) 127)
(push (@ 128))
(push 'mon-min-x)
(mov (& 43) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
128
(eval ())
(mov a1 (& 32))
(push (@ 129))
(push 'mon-min-y)
(mov (& 43) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
129
(eval ())
(mov a1 (& 31))
(push (@ 130))
(push 'mon-max-x)
(mov (& 43) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
130
(eval ())
(mov a1 (& 30))
(push (@ 131))
(push 'mon-max-y)
(mov (& 43) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
131
(eval ())
(mov a1 (& 29))
(push (@ 132))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 35))
(push (& 35))
(push (& 35))
(push a1)
(push (@ 133))
(mov 't a1)
(jcall v-num-echelle)
(push a1)
(mov '1 a4)
(jmp list)
133
(eval ())
(push a1)
(mov '7 a4)
(jmp presentateur)
132
(eval ())
(mov a1 (& 17))
(push (@ 134))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 35))
(push (& 35))
(push (& 35))
(push (& 35))
(push (& 48))
(mov '7 a4)
(jmp presentateur)
134
(eval ())
(mov a1 (& 21))
127
(btnil (& 39) 136)
(push (@ 137))
(push 'mon-min-x)
(mov (& 41) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
137
(eval ())
(mov a1 (& 28))
(push (@ 138))
(push 'mon-min-y)
(mov (& 41) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
138
(eval ())
(mov a1 (& 27))
(push (@ 139))
(push 'mon-max-x)
(mov (& 41) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
139
(eval ())
(mov a1 (& 26))
(push (@ 140))
(push 'mon-max-y)
(mov (& 41) a4)
(push (car a4))
(mov '2 a4)
(jmp send)
140
(eval ())
(mov a1 (& 25))
(push (@ 141))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 31))
(push (& 31))
(push (& 31))
(push a1)
(push (@ 142))
(mov 't a1)
(jcall v-num-echelle)
(push a1)
(mov '1 a4)
(jmp list)
142
(eval ())
(push a1)
(mov '7 a4)
(jmp presentateur)
141
(eval ())
(mov a1 (& 16))
(push (@ 143))
(mov (& 5) a4)
(times (& 46) a4)
(push a4)
(mov (& 5) a4)
(times (& 47) a4)
(push a4)
(push (& 31))
(push (& 31))
(push (& 31))
(push (& 31))
(push (& 46))
(mov '7 a4)
(jmp presentateur)
143
(eval ())
(mov a1 (& 20))
136
(push (@ 144))
(push (& 47))
(push (@ 145))
(push (& 47))
(push (& 12))
(push '0)
(push (& 10))
(push (& 10))
(push '0)
(push '0)
(mov (& 55) a4)
(times (& 14) a4)
(push a4)
(mov (& 56) a4)
(times (& 14) a4)
(push a4)
(push (& 34))
(mov '10 a4)
(jmp vue-sur-voyeur)
145
(eval ())
(push a1)
(mov (& 18) a4)
(btnil a4 146)
(push (@ 147))
(push nil)
(push (& 13))
(push (& 9))
(push (& 13))
(push (& 13))
(push '0)
(push '0)
(mov (& 56) a3)
(times (& 15) a3)
(push a3)
(push (& 17))
(push (& 32))
(mov '10 a4)
(jmp vue-sur-h-voyeur)
147
(eval ())
(mov a1 a4)
146
(push a4)
(mov (& 16) a4)
(btnil a4 148)
(push (@ 149))
(btnil (& 49) 150)
(mov '"" a3)
(bra 151)
150
(mov nil a3)
151
(push a3)
(push '0)
(push '0)
(push (& 16))
(push (& 16))
(push '0)
(push '0)
(push (& 20))
(mov (& 58) a3)
(times (& 16) a3)
(push a3)
(push (& 32))
(mov '10 a4)
(jmp vue-sur-v-voyeur)
149
(eval ())
(mov a1 a4)
148
(push a4)
(mov (& 46) a4)
(btnil a4 152)
(push (@ 153))
(btnil (& 48) 154)
(mov '"" a3)
(bra 155)
154
(mov nil a3)
155
(push a3)
(push '0)
(mov (& 11) a3)
(plus (& 13) a3)
(push a3)
(push (& 17))
(push (& 11))
(push '0)
(push '0)
(mov (& 58) a3)
(times (& 17) a3)
(push a3)
(push (& 15))
(push (& 32))
(mov '10 a4)
(jmp vue-sur-f-voyeur)
153
(eval ())
(mov a1 a4)
152
(push a4)
(mov (& 47) a4)
(btnil a4 156)
(push (@ 157))
(push (& 49))
(push (& 16))
(mov (& 12) a3)
(plus (& 14) a3)
(push a3)
(push (& 12))
(push (& 12))
(push '0)
(push '0)
(mov (& 59) a3)
(times (& 18) a3)
(push a3)
(push (& 16))
(push (& 37))
(mov '10 a4)
(jmp vue-sur-h-voyeur)
157
(eval ())
(mov a1 a4)
156
(push a4)
(mov (& 46) a4)
(btnil a4 158)
(push (@ 159))
(btnil (& 48) 160)
(mov '"" a3)
(bra 161)
160
(mov nil a3)
161
(push a3)
(push '0)
(mov (& 11) a2)
(plus (& 15) a2)
(mov (& 13) a3)
(plus a2 a3)
(push a3)
(push (& 19))
(push (& 13))
(push '0)
(push '0)
(mov (& 60) a3)
(times (& 19) a3)
(push a3)
(push (& 17))
(push (& 33))
(mov '10 a4)
(jmp vue-sur-f-voyeur)
159
(eval ())
(mov a1 a4)
158
(push a4)
(mov (& 47) a4)
(btnil a4 162)
(push (@ 163))
(push (& 49))
(push (& 18))
(mov (& 12) a3)
(plus (& 16) a3)
(mov (& 14) a2)
(plus a3 a2)
(push a2)
(push (& 14))
(push (& 14))
(push '0)
(push '0)
(mov (& 61) a3)
(times (& 20) a3)
(push a3)
(push (& 18))
(push (& 38))
(mov '10 a4)
(jmp vue-sur-h-voyeur)
163
(eval ())
(mov a1 a4)
162
(push a4)
(mov '8 a4)
(jmp #:image:rectangle:application:bars-and-charts:make-controleur)
144
(eval ())
(hpmovx a1 (& 46) '7)
(adjstk '47)
(return)
101
(mov nil a1)
(adjstk '8)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:make-controleur nsubr)
(entry #:image:rectangle:application:bars-and-charts:make-controleur nsubr)
(cnbge a4 '1 0)
(mov '#:image:rectangle:application:bars-and-charts:make-controleur a1)
(mov '1 a2)
(jmp #:llcp:errwna)
0
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(push a1)
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(btnil (& 0) 103)
(push (@ 105))
(push 'voyeur)
(push (& 2))
(mov '2 a4)
(jmp send)
105
(eval ())
(bra 104)
103
(mov nil a1)
104
(adjstk '1)
(mov (& 0) a2)
(jcall cons)
(mov a1 (& 0))
(bra 101)
102
(mov (& 0) a1)
(jcall nreverse)
(adjstk '2)
(push a1)
(push nil)
(mov (& 2) a2)
(mov nil a1)
(jcall remq)
(mov a1 (& 2))
(mov (& 1) a2)
(mov nil a1)
(jcall remq)
(mov a1 (& 1))
(push 'controleur)
(mov (& 3) a1)
(call #:image:rectangle:application:bars-and-charts:image-controleur)
(push a1)
(push (& 5))
(push (& 4))
(push (& 4))
(mov (& 7) a2)
(mov '0 a1)
(jcall nth)
(push a1)
(mov (& 2) a2)
(mov '0 a1)
(jcall nth)
(push a1)
(mov (& 3) a2)
(mov '1 a1)
(jcall nth)
(push a1)
(mov (& 4) a2)
(mov '2 a1)
(jcall nth)
(push a1)
(mov (& 5) a2)
(mov '4 a1)
(jcall nth)
(push a1)
(mov (& 6) a2)
(mov '6 a1)
(jcall nth)
(push (@ 106))
(push (& 9))
(push (@ 107))
(mov a1 a2)
(mov 'seco2-v a1)
(jcall cons)
(push a1)
(mov (& 4) a2)
(mov 'seco1-v a1)
(jcall cons)
(push a1)
(mov (& 6) a2)
(mov 'ech-v-v a1)
(jcall cons)
(push a1)
(mov (& 8) a2)
(mov 'ech-h-v a1)
(jcall cons)
(push a1)
(mov (& 10) a2)
(mov 'princ-v a1)
(jcall cons)
(push a1)
(mov (& 12) a2)
(mov 'vue-sur-princ-v a1)
(jcall cons)
(push a1)
(mov (& 14) a2)
(mov 'liste-des-v-sur-histo a1)
(jcall cons)
(push a1)
(mov (& 16) a2)
(mov 'liste-des-voyeurs a1)
(jcall cons)
(push a1)
(mov (& 18) a2)
(mov 'bars-and-charts a1)
(jcall cons)
(push a1)
(mov '9 a4)
(jmp list)
107
(eval ())
(push a1)
(push (@ 108))
(push (& 13))
(mov '1 a4)
(jmp list)
108
(eval ())
(push a1)
(push (@ 109))
(mov '0 a4)
(jmp list)
109
(eval ())
(push a1)
(mov '4 a4)
(jmp mixed-application)
106
(eval ())
(adjstk '14)
(return)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:image-controleur subr1)
(push (@ 101))
(push '%view)
(push a1)
(mov '2 a4)
(jmp apply)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:add-object-liste-principale subr2)
(entry #:image:rectangle:application:bars-and-charts:add-object-liste-principale subr2)
(push a2)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 102))
(push 'inserer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(mov '0 a4)
(jmp current-window)
104
(eval ())
(push a1)
(push (@ 105))
(push dlink)
(push prot)
(stack dlink)
(push (@ 107))
(hpxmov (& 5) '4 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
107
(eval ())
(push (@ 108))
(push 'display)
(push (& 7))
(push '0)
(push '0)
(push nil)
(mov '5 a4)
(jmp send)
108
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 106) a3)
105
(push a3)
(push a2)
(push (@ 109))
(push (& 4))
(mov '1 a4)
(jmp current-window)
109
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
106
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:delete-object-liste-principale subr2)
(entry #:image:rectangle:application:bars-and-charts:delete-object-liste-principale subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'retirer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:modify-object-liste-principale subr3)
(entry #:image:rectangle:application:bars-and-charts:modify-object-liste-principale subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'modifier-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:add-object-liste-secondaire-1 subr2)
(entry #:image:rectangle:application:bars-and-charts:add-object-liste-secondaire-1 subr2)
(push a2)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco1-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 102))
(push 'inserer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(mov '0 a4)
(jmp current-window)
104
(eval ())
(push a1)
(push (@ 105))
(push dlink)
(push prot)
(stack dlink)
(push (@ 107))
(hpxmov (& 5) '4 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
107
(eval ())
(push (@ 108))
(push 'display)
(push (& 7))
(push '0)
(push '0)
(push nil)
(mov '5 a4)
(jmp send)
108
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 106) a3)
105
(push a3)
(push a2)
(push (@ 109))
(push (& 4))
(mov '1 a4)
(jmp current-window)
109
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
106
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:delete-object-liste-secondaire-1 subr2)
(entry #:image:rectangle:application:bars-and-charts:delete-object-liste-secondaire-1 subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco1-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'retirer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'seco1-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:modify-object-liste-secondaire-1 subr3)
(entry #:image:rectangle:application:bars-and-charts:modify-object-liste-secondaire-1 subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco1-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'modifier-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'seco1-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:add-object-liste-secondaire-2 subr2)
(entry #:image:rectangle:application:bars-and-charts:add-object-liste-secondaire-2 subr2)
(push a2)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco2-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 102))
(push 'inserer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(mov '0 a4)
(jmp current-window)
104
(eval ())
(push a1)
(push (@ 105))
(push dlink)
(push prot)
(stack dlink)
(push (@ 107))
(hpxmov (& 5) '4 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
107
(eval ())
(push (@ 108))
(push 'display)
(push (& 7))
(push '0)
(push '0)
(push nil)
(mov '5 a4)
(jmp send)
108
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 106) a3)
105
(push a3)
(push a2)
(push (@ 109))
(push (& 4))
(mov '1 a4)
(jmp current-window)
109
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
106
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:delete-object-liste-secondaire-2 subr2)
(entry #:image:rectangle:application:bars-and-charts:delete-object-liste-secondaire-2 subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco2-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'retirer-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(mov '3 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'seco2-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:modify-object-liste-secondaire-2 subr3)
(entry #:image:rectangle:application:bars-and-charts:modify-object-liste-secondaire-2 subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(push 'scrollee)
(hpxmov a1 '7 a2)
(mov 'seco2-v a1)
(jcall component)
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 102))
(push 'modifier-courbe)
(push (@ 103))
(push 'image)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
102
(eval ())
(push (@ 104))
(push 'redisplay)
(hpxmov (& 2) '7 a2)
(mov 'seco2-v a1)
(jcall component)
(push a1)
(push nil)
(mov '3 a4)
(jmp send)
104
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:create-vertical-histogramme subr2)
(entry #:image:rectangle:application:bars-and-charts:create-vertical-histogramme subr2)
(push a2)
(push a1)
(hpxmov a1 '7 a4)
(push a4)
(mov a4 a2)
(mov 'liste-des-v-sur-histo a1)
(jcall component)
(push a1)
(mov (& 1) a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(push (@ 101))
(push 'image)
(push (@ 102))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 103))
(push 'liste-de-points)
(push (& 7))
(mov '2 a4)
(jmp send)
103
(eval ())
(jcall gros-v-histogramme)
(push a1)
(push nil)
(push nil)
(hpxmov (& 7) '9 a4)
(push a4)
(push (@ 104))
(push 'width)
(push (& 10))
(mov '2 a4)
(jmp send)
104
(eval ())
(mov a1 a2)
(pop a1)
(call #:image:rectangle:application:bars-and-charts:h-second-v)
(push a1)
(push (@ 105))
(push 'height)
(push (& 7))
(mov '2 a4)
(jmp send)
105
(eval ())
(push a1)
(push (@ 106))
(push 'width)
(push (@ 107))
(push 'scrollee)
(push (& 10))
(mov '2 a4)
(jmp send)
107
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 108))
(push 'height)
(push (@ 109))
(push 'scrollee)
(push (& 11))
(mov '2 a4)
(jmp send)
109
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
108
(eval ())
(push a1)
(push (@ 110))
(push 'x)
(push (@ 111))
(push 'scrollee)
(push (& 12))
(mov '2 a4)
(jmp send)
111
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
110
(eval ())
(push a1)
(push (@ 112))
(push 'y)
(push (@ 113))
(push 'scrollee)
(push (& 13))
(mov '2 a4)
(jmp send)
113
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
112
(eval ())
(push a1)
(push (@ 114))
(push (& 6))
(push (& 6))
(push (@ 115))
(push (@ 116))
(push 'mon-min-x)
(push (& 20))
(mov '2 a4)
(jmp send)
116
(eval ())
(push a1)
(push '0)
(mov '2 a4)
(jmp min)
115
(eval ())
(push a1)
(push (@ 117))
(push 'min-y)
(push (& 15))
(mov '2 a4)
(jmp send)
117
(eval ())
(push a1)
(push (@ 118))
(push 'mon-max-x)
(push (& 21))
(mov '2 a4)
(jmp send)
118
(eval ())
(push a1)
(push (@ 119))
(push 'max-y)
(push (& 17))
(mov '2 a4)
(jmp send)
119
(eval ())
(push a1)
(push (@ 120))
(push (& 16))
(mov '1 a4)
(jmp list)
120
(eval ())
(push a1)
(mov '7 a4)
(jmp presentateur)
114
(eval ())
(mov a1 (& 7))
(push (@ 121))
(push '"essai")
(push '0)
(push '0)
(push (& 9))
(push (& 9))
(push (& 7))
(push (& 7))
(push (& 11))
(push (& 11))
(push a1)
(mov '10 a4)
(jmp vue-sur-h-voyeur)
121
(eval ())
(mov a1 (& 6))
(push (@ 122))
(push 'voyeur)
(push a1)
(mov '2 a4)
(jmp send)
122
(eval ())
(mov (& 11) a2)
(jcall cons)
(mov a1 (& 11))
(mov a1 a3)
(mov 'liste-des-v-sur-histo a2)
(mov (& 12) a1)
(jcall add-component)
(push (@ 123))
(push '#:image:rectangle:application)
(push '0)
(push '0)
(mov '30 a4)
(plus (& 9) a4)
(push a4)
(mov '30 a4)
(plus (& 9) a4)
(push a4)
(push (@ 124))
(push (@ 125))
(push '0)
(push '0)
(mov '30 a4)
(plus (& 15) a4)
(push a4)
(mov '30 a4)
(plus (& 15) a4)
(push a4)
(push 't)
(mov '5 a4)
(jmp beau-cadre)
125
(eval ())
(push a1)
(push (@ 126))
(push '0)
(push '0)
(push (& 16))
(push (& 16))
(push '0)
(mov '5 a4)
(jmp filledbox)
126
(eval ())
(push a1)
(push (& 15))
(mov '3 a4)
(jmp %centeredview)
124
(eval ())
(push a1)
(mov '6 a4)
(jmp application)
123
(eval ())
(adjstk '15)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:create-horizontal-histogramme subr2)
(entry #:image:rectangle:application:bars-and-charts:create-horizontal-histogramme subr2)
(push a2)
(push a1)
(hpxmov a1 '7 a4)
(push a4)
(mov a4 a2)
(mov 'liste-des-v-sur-histo a1)
(jcall component)
(push a1)
(mov (& 1) a2)
(mov 'vue-sur-princ-v a1)
(jcall component)
(push a1)
(mov (& 2) a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(push (@ 101))
(push 'image)
(push (@ 102))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push a1)
(push (@ 103))
(push 'liste-de-points)
(push (& 8))
(mov '2 a4)
(jmp send)
103
(eval ())
(jcall gros-h-histogramme)
(push a1)
(push nil)
(push nil)
(hpxmov (& 8) '9 a4)
(push a4)
(push (@ 104))
(push 'width)
(push (& 11))
(mov '2 a4)
(jmp send)
104
(eval ())
(mov a1 a2)
(pop a1)
(call #:image:rectangle:application:bars-and-charts:h-second-v)
(push a1)
(push (@ 105))
(push 'height)
(push (& 8))
(mov '2 a4)
(jmp send)
105
(eval ())
(push a1)
(push (@ 106))
(push 'width)
(push (@ 107))
(push 'scrollee)
(push (& 10))
(mov '2 a4)
(jmp send)
107
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 108))
(push 'height)
(push (@ 109))
(push 'scrollee)
(push (& 11))
(mov '2 a4)
(jmp send)
109
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
108
(eval ())
(push a1)
(push (@ 110))
(push 'x)
(push (@ 111))
(push 'scrollee)
(push (& 12))
(mov '2 a4)
(jmp send)
111
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
110
(eval ())
(push a1)
(push (@ 112))
(push 'y)
(push (@ 113))
(push 'scrollee)
(push (& 13))
(mov '2 a4)
(jmp send)
113
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
112
(eval ())
(push a1)
(push (@ 114))
(push (& 4))
(push (& 4))
(push (@ 115))
(push (@ 116))
(push 'mon-min-x)
(push (& 21))
(mov '2 a4)
(jmp send)
116
(eval ())
(push a1)
(push '0)
(mov '2 a4)
(jmp min)
115
(eval ())
(push a1)
(push (@ 117))
(push 'min-y)
(push (& 15))
(mov '2 a4)
(jmp send)
117
(eval ())
(push a1)
(push (@ 118))
(push 'mon-max-x)
(push (& 22))
(mov '2 a4)
(jmp send)
118
(eval ())
(push a1)
(push (@ 119))
(push 'max-y)
(push (& 17))
(mov '2 a4)
(jmp send)
119
(eval ())
(push a1)
(push (@ 120))
(push (& 16))
(mov '1 a4)
(jmp list)
120
(eval ())
(push a1)
(mov '7 a4)
(jmp presentateur)
114
(eval ())
(mov a1 (& 7))
(push (@ 121))
(push '"essai")
(push '0)
(push '0)
(push (& 9))
(push (& 9))
(push (& 7))
(push (& 7))
(push (& 11))
(push (& 11))
(push a1)
(mov '10 a4)
(jmp vue-sur-v-voyeur)
121
(eval ())
(mov a1 (& 6))
(push (@ 122))
(push 'voyeur)
(push a1)
(mov '2 a4)
(jmp send)
122
(eval ())
(mov (& 12) a2)
(jcall cons)
(mov a1 (& 12))
(mov a1 a3)
(mov 'liste-des-v-sur-histo a2)
(mov (& 13) a1)
(jcall add-component)
(push (@ 123))
(push '#:image:rectangle:application)
(push '0)
(push '0)
(mov '30 a4)
(plus (& 9) a4)
(push a4)
(mov '30 a4)
(plus (& 9) a4)
(push a4)
(push (@ 124))
(push (@ 125))
(push '0)
(push '0)
(mov '30 a4)
(plus (& 15) a4)
(push a4)
(mov '30 a4)
(plus (& 15) a4)
(push a4)
(push 't)
(mov '5 a4)
(jmp beau-cadre)
125
(eval ())
(push a1)
(push (@ 126))
(push '0)
(push '0)
(push (& 16))
(push (& 16))
(push '0)
(mov '5 a4)
(jmp filledbox)
126
(eval ())
(push a1)
(push (& 15))
(mov '3 a4)
(jmp %centeredview)
124
(eval ())
(push a1)
(mov '6 a4)
(jmp application)
123
(eval ())
(adjstk '16)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:get-liste-principale subr1)
(entry #:image:rectangle:application:bars-and-charts:get-liste-principale subr1)
(hpxmov a1 '7 a4)
(mov a4 a2)
(mov 'princ-v a1)
(jcall component)
(push (@ 101))
(push 'image)
(push (@ 102))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 103))
(push 'liste-de-courbes)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(mov (cdr a1) a1)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:get-liste-secondaire1 subr1)
(entry #:image:rectangle:application:bars-and-charts:get-liste-secondaire1 subr1)
(hpxmov a1 '7 a4)
(mov a4 a2)
(mov 'seco1-v a1)
(jcall component)
(push (@ 101))
(push 'image)
(push (@ 102))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 103))
(push 'liste-de-courbes)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(mov (cdr a1) a1)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:get-liste-secondaire2 subr1)
(entry #:image:rectangle:application:bars-and-charts:get-liste-secondaire2 subr1)
(hpxmov a1 '7 a4)
(mov a4 a2)
(mov 'seco2-v a1)
(jcall component)
(push (@ 101))
(push 'image)
(push (@ 102))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp send)
101
(eval ())
(push (@ 103))
(push 'liste-de-courbes)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(mov (cdr a1) a1)
(return)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:valeur-presente? subr1)
(entry #:image:rectangle:application:bars-and-charts:valeur-presente? subr1)
(push a1)
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(mov '#:image:rectangle:objet-graph:valeur a2)
(mov (& 0) a1)
(jcall typep)
(btnil a1 103)
(mov (& 0) a4)
(bra 104)
103
(mov nil a4)
104
(adjstk '1)
(mov a4 (& 0))
(bfnil a4 102)
(bra 101)
102
(mov (& 0) a1)
(adjstk '2)
(return)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:w-ech-v-v subr2)
(mov '30 a1)
(return)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:w-prin-v subr2)
(push a2)
(call #:image:rectangle:application:bars-and-charts:w-ech-v-v)
(pop a4)
(diff a1 a4)
(mov a4 a1)
(return)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:h-prin-v subr2)
(btnil a1 101)
(push (@ 103))
(push '8)
(push (@ 104))
(push a2)
(push '15)
(mov '2 a4)
(jmp /)
104
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
103
(eval ())
(jmp fix)
101
(push (@ 105))
(push '9)
(push (@ 106))
(push a2)
(push '15)
(mov '2 a4)
(jmp /)
106
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
105
(eval ())
(jmp fix)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:w-ech-h-v subr2)
(bra #:image:rectangle:application:bars-and-charts:w-prin-v)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:h-ech-h-v subr2)
(btnil a1 101)
(push (@ 103))
(push '2)
(push (@ 104))
(push a2)
(push '15)
(mov '2 a4)
(jmp /)
104
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
103
(eval ())
(jmp fix)
101
(push (@ 105))
(push '1)
(push (@ 106))
(push a2)
(push '15)
(mov '2 a4)
(jmp /)
106
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
105
(eval ())
(jmp fix)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:h-ech-v-v subr2)
(bra #:image:rectangle:application:bars-and-charts:h-prin-v)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:w-second-v subr2)
(bra #:image:rectangle:application:bars-and-charts:w-prin-v)
))
(loader'((entry #:image:rectangle:application:bars-and-charts:h-second-v subr2)
(push (@ 101))
(push '1)
(push (@ 102))
(push a2)
(push '6)
(mov '2 a4)
(jmp /)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
101
(eval ())
(jmp fix)
))
(loader'((fentry #:image:rectangle:application:bars-and-charts:ajuster-deplaceur subr1)
(entry #:image:rectangle:application:bars-and-charts:ajuster-deplaceur subr1)
(push a1)
(mov '#:image:rectangle:application:bars-and-charts a2)
(jcall typep)
(btnil a1 102)
(mov (& 0) a2)
(mov 'interface a1)
(jcall component)
(mov a1 a2)
(mov 'deplaceur a1)
(jcall component)
(mov a1 (& 0))
102
(mov (& 0) a2)
(mov 'bars-and-charts a1)
(jcall component)
(hpxmov a1 '7 a4)
(mov a4 a2)
(mov 'princ-v a1)
(jcall component)
(push a1)
(push (@ 103))
(push 'scrollee)
(push a1)
(mov '2 a4)
(jmp send)
103
(eval ())
(push a1)
(mov (& 2) a2)
(mov 'deplaceur a1)
(jcall component)
(push a1)
(mov (& 3) a2)
(mov 'espace-utilisable a1)
(jcall component)
(push a1)
(push (@ 104))
(push 'width)
(push a1)
(mov '2 a4)
(jmp send)
104
(eval ())
(push a1)
(push (@ 105))
(push 'height)
(push (& 3))
(mov '2 a4)
(jmp send)
105
(eval ())
(push a1)
(push (@ 106))
(push 'width)
(push (& 6))
(mov '2 a4)
(jmp send)
106
(eval ())
(push a1)
(push (@ 107))
(push 'height)
(push (& 7))
(mov '2 a4)
(jmp send)
107
(eval ())
(push a1)
(push (@ 108))
(push (@ 109))
(push 'width)
(push (& 10))
(mov '2 a4)
(jmp send)
109
(eval ())
(push a1)
(push (& 3))
(mov '2 a4)
(jmp /)
108
(eval ())
(push a1)
(push (@ 110))
(push (@ 111))
(push 'height)
(push (& 11))
(mov '2 a4)
(jmp send)
111
(eval ())
(push a1)
(push (& 3))
(mov '2 a4)
(jmp /)
110
(eval ())
(push a1)
(push (@ 112))
(push 'grow)
(push (& 9))
(push (@ 113))
(push (& 5))
(push (& 10))
(mov '2 a4)
(jmp *)
113
(eval ())
(jcall fix)
(push a1)
(push (@ 114))
(push (& 5))
(push (& 10))
(mov '2 a4)
(jmp *)
114
(eval ())
(jcall fix)
(push a1)
(mov '4 a4)
(jmp send)
112
(eval ())
(push (@ 115))
(push 'translate)
(push (& 9))
(push (@ 116))
(push (@ 117))
(push (& 10))
(push (& 9))
(mov '2 a4)
(jmp /)
117
(eval ())
(push a1)
(push (@ 118))
(push (@ 119))
(push 'x)
(push (& 16))
(mov '2 a4)
(jmp send)
119
(eval ())
(push a1)
(mov '1 a4)
(jmp -)
118
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
116
(eval ())
(jcall fix)
(push a1)
(push (@ 120))
(push (@ 121))
(push (& 10))
(push (& 9))
(mov '2 a4)
(jmp /)
121
(eval ())
(push a1)
(push (@ 122))
(push (@ 123))
(push 'y)
(push (& 17))
(mov '2 a4)
(jmp send)
123
(eval ())
(push a1)
(mov '1 a4)
(jmp -)
122
(eval ())
(push a1)
(mov '2 a4)
(jmp *)
120
(eval ())
(jcall fix)
(push a1)
(mov '4 a4)
(jmp send)
115
(eval ())
(mov (& 6) a1)
(adjstk '11)
(jmp full-redisplay)
))
(loader '((end)))
